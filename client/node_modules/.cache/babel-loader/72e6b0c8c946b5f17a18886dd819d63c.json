{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/ViewOthersProfileCon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport ViewOthersProfile from \"../components/ViewOthersProfile\";\nexport default function ViewOthersProfileCon(props) {\n  _s();\n\n  let {\n    userid\n  } = props.match.params;\n  const [activeTab, setActiveTab] = useState(0);\n  let dispatch = useDispatch();\n  let {\n    user,\n    token,\n    followingUsers: loggedInUserFollowing,\n    showFollowButton\n  } = useSelector(({\n    getOthersProfile: {\n      user\n    },\n    userProfile: {\n      token\n    },\n    followUnfollow: {\n      showFollowButton,\n      followingUsers\n    }\n  }) => ({\n    user,\n    token,\n    followingUsers,\n    showFollowButton\n  }));\n\n  let handleTabSelect = tabIndex => {\n    setActiveTab(tabIndex);\n  };\n\n  useEffect(() => {\n    dispatch(allActions.getOthersProfileActions.getOtherUserProfile(`/user/profile/${userid}`, token));\n    return () => {//cleanup\n    };\n  }, [dispatch, userid, token]);\n  let beingFollowed = isUserBeingFollowed(user._id, loggedInUserFollowing);\n  return /*#__PURE__*/_jsxDEV(ViewOthersProfile, {\n    beingFollowed: beingFollowed,\n    handleTabSelect: handleTabSelect,\n    activeTab: activeTab,\n    token: token,\n    dispatch: dispatch,\n    userid: userid,\n    user: user,\n    showFollowButton: showFollowButton\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ViewOthersProfileCon, \"Qwpp34OgpSP3a8bbfaArsg5t7Is=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ViewOthersProfileCon;\n\nfunction isUserBeingFollowed(userId, loggedInUserFollowing) {\n  if (!loggedInUserFollowing) return false;\n\n  for (let index = 0; index < loggedInUserFollowing.length; index++) {\n    if (loggedInUserFollowing[index]._id === userId) return true;\n  }\n\n  return false;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOthersProfileCon\");","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/ViewOthersProfileCon.js"],"names":["React","useState","useEffect","useDispatch","useSelector","allActions","ViewOthersProfile","ViewOthersProfileCon","props","userid","match","params","activeTab","setActiveTab","dispatch","user","token","followingUsers","loggedInUserFollowing","showFollowButton","getOthersProfile","userProfile","followUnfollow","handleTabSelect","tabIndex","getOthersProfileActions","getOtherUserProfile","beingFollowed","isUserBeingFollowed","_id","userId","index","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,eAAe,SAASC,oBAAT,CAA8BC,KAA9B,EAAqC;AAAA;;AAClD,MAAI;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,KAAN,CAAYC,MAA7B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,CAAD,CAA1C;AACA,MAAIa,QAAQ,GAAGX,WAAW,EAA1B;AAEA,MAAI;AACFY,IAAAA,IADE;AAEFC,IAAAA,KAFE;AAGFC,IAAAA,cAAc,EAAEC,qBAHd;AAIFC,IAAAA;AAJE,MAKAf,WAAW,CACb,CAAC;AACCgB,IAAAA,gBAAgB,EAAE;AAAEL,MAAAA;AAAF,KADnB;AAECM,IAAAA,WAAW,EAAE;AAAEL,MAAAA;AAAF,KAFd;AAGCM,IAAAA,cAAc,EAAE;AAAEH,MAAAA,gBAAF;AAAoBF,MAAAA;AAApB;AAHjB,GAAD,MAIO;AACLF,IAAAA,IADK;AAELC,IAAAA,KAFK;AAGLC,IAAAA,cAHK;AAILE,IAAAA;AAJK,GAJP,CADa,CALf;;AAiBA,MAAII,eAAe,GAAGC,QAAQ,IAAI;AAChCX,IAAAA,YAAY,CAACW,QAAD,CAAZ;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,QAAQ,CACNT,UAAU,CAACoB,uBAAX,CAAmCC,mBAAnC,CACG,iBAAgBjB,MAAO,EAD1B,EAEEO,KAFF,CADM,CAAR;AAMA,WAAO,MAAM,CACX;AACD,KAFD;AAGD,GAVQ,EAUN,CAACF,QAAD,EAAWL,MAAX,EAAmBO,KAAnB,CAVM,CAAT;AAWA,MAAIW,aAAa,GAAGC,mBAAmB,CAACb,IAAI,CAACc,GAAN,EAAWX,qBAAX,CAAvC;AACA,sBACE,QAAC,iBAAD;AACE,IAAA,aAAa,EAAES,aADjB;AAEE,IAAA,eAAe,EAAEJ,eAFnB;AAGE,IAAA,SAAS,EAAEX,SAHb;AAIE,IAAA,KAAK,EAAEI,KAJT;AAKE,IAAA,QAAQ,EAAEF,QALZ;AAME,IAAA,MAAM,EAAEL,MANV;AAOE,IAAA,IAAI,EAAEM,IAPR;AAQE,IAAA,gBAAgB,EAAEI;AARpB;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAlDuBZ,oB;UAGPJ,W,EAOXC,W;;;KAVkBG,oB;;AAoDxB,SAASqB,mBAAT,CAA6BE,MAA7B,EAAqCZ,qBAArC,EAA4D;AAC1D,MAAI,CAACA,qBAAL,EAA4B,OAAO,KAAP;;AAC5B,OAAK,IAAIa,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGb,qBAAqB,CAACc,MAAlD,EAA0DD,KAAK,EAA/D,EAAmE;AACjE,QAAIb,qBAAqB,CAACa,KAAD,CAArB,CAA6BF,GAA7B,KAAqCC,MAAzC,EAAiD,OAAO,IAAP;AAClD;;AACD,SAAO,KAAP;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport ViewOthersProfile from \"../components/ViewOthersProfile\";\n\nexport default function ViewOthersProfileCon(props) {\n  let { userid } = props.match.params;\n  const [activeTab, setActiveTab] = useState(0);\n  let dispatch = useDispatch();\n\n  let {\n    user,\n    token,\n    followingUsers: loggedInUserFollowing,\n    showFollowButton\n  } = useSelector(\n    ({\n      getOthersProfile: { user },\n      userProfile: { token },\n      followUnfollow: { showFollowButton, followingUsers }\n    }) => ({\n      user,\n      token,\n      followingUsers,\n      showFollowButton\n    })\n  );\n  let handleTabSelect = tabIndex => {\n    setActiveTab(tabIndex);\n  };\n\n  useEffect(() => {\n    dispatch(\n      allActions.getOthersProfileActions.getOtherUserProfile(\n        `/user/profile/${userid}`,\n        token\n      )\n    );\n    return () => {\n      //cleanup\n    };\n  }, [dispatch, userid, token]);\n  let beingFollowed = isUserBeingFollowed(user._id, loggedInUserFollowing);\n  return (\n    <ViewOthersProfile\n      beingFollowed={beingFollowed}\n      handleTabSelect={handleTabSelect}\n      activeTab={activeTab}\n      token={token}\n      dispatch={dispatch}\n      userid={userid}\n      user={user}\n      showFollowButton={showFollowButton}\n    />\n  );\n}\n\nfunction isUserBeingFollowed(userId, loggedInUserFollowing) {\n  if (!loggedInUserFollowing) return false;\n  for (let index = 0; index < loggedInUserFollowing.length; index++) {\n    if (loggedInUserFollowing[index]._id === userId) return true;\n  }\n  return false;\n}\n"]},"metadata":{},"sourceType":"module"}