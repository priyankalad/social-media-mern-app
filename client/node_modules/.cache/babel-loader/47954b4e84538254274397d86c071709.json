{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import allActions from\"../redux/allActions\";import Post from\"../components/Post\";import{Link}from\"react-router-dom\";var MyPostsCon=function MyPostsCon(props){var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var _ref$userProfile=_ref.userProfile,user=_ref$userProfile.user,token=_ref$userProfile.token,_ref$post=_ref.post,posts=_ref$post.posts,smallLoading=_ref$post.smallLoading,postId=_ref$post.postId;return{token:token,posts:posts,user:user,smallLoading:smallLoading,postId:postId};}),token=_useSelector.token,posts=_useSelector.posts,user=_useSelector.user,smallLoading=_useSelector.smallLoading,postId=_useSelector.postId;var myposts=posts.filter(function(p){return p.postedBy.id===user._id;});var deletePostHandler=function deletePostHandler(postId){return dispatch(allActions.postActions.deletePost(\"/user/post/delete\",postId,token));};useEffect(function(){dispatch(allActions.postActions.getAllPosts(\"/user/post\",token));},[dispatch,token]);return/*#__PURE__*/_jsx(_Fragment,{children:myposts&&myposts.length>0?myposts.map(function(post){return/*#__PURE__*/_jsx(Post,{post:post,deletable:true,deletePostHandler:deletePostHandler,smallLoading:smallLoading,postId:postId},post._id);}):/*#__PURE__*/_jsxs(\"div\",{className:\"text-center mt-4\",children:[/*#__PURE__*/_jsxs(\"p\",{style:{color:\"dimgrey\"},children:[\"you have not created any post yet.\",\" \"]}),/*#__PURE__*/_jsx(Link,{to:\"/createpost\",className:\"btn btn-link\",children:\"Create Post\"})]})});};export default MyPostsCon;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyPostsCon.js"],"names":["React","useEffect","useDispatch","useSelector","allActions","Post","Link","MyPostsCon","props","dispatch","userProfile","user","token","post","posts","smallLoading","postId","myposts","filter","p","postedBy","id","_id","deletePostHandler","postActions","deletePost","getAllPosts","length","map","color"],"mappings":"6IAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,IAAT,KAAqB,kBAArB,CAEA,GAAIC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,CAAI,CACxB,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CADwB,iBAE6BC,WAAW,CAC9D,yCACEO,WADF,CACiBC,IADjB,kBACiBA,IADjB,CACuBC,KADvB,kBACuBA,KADvB,gBAEEC,IAFF,CAEUC,KAFV,WAEUA,KAFV,CAEiBC,YAFjB,WAEiBA,YAFjB,CAE+BC,MAF/B,WAE+BA,MAF/B,OAGO,CACLJ,KAAK,CAALA,KADK,CAELE,KAAK,CAALA,KAFK,CAGLH,IAAI,CAAJA,IAHK,CAILI,YAAY,CAAZA,YAJK,CAKLC,MAAM,CAANA,MALK,CAHP,EAD8D,CAFxC,CAEhBJ,KAFgB,cAEhBA,KAFgB,CAETE,KAFS,cAETA,KAFS,CAEFH,IAFE,cAEFA,IAFE,CAEII,YAFJ,cAEIA,YAFJ,CAEkBC,MAFlB,cAEkBA,MAFlB,CAcxB,GAAIC,CAAAA,OAAO,CAAGH,KAAK,CAACI,MAAN,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,QAAF,CAAWC,EAAX,GAAkBV,IAAI,CAACW,GAA3B,EAAd,CAAd,CAEA,GAAIC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAAAP,MAAM,QAC5BP,CAAAA,QAAQ,CACNL,UAAU,CAACoB,WAAX,CAAuBC,UAAvB,CAAkC,mBAAlC,CAAuDT,MAAvD,CAA+DJ,KAA/D,CADM,CADoB,EAA9B,CAIAX,SAAS,CAAC,UAAM,CACdQ,QAAQ,CAACL,UAAU,CAACoB,WAAX,CAAuBE,WAAvB,CAAmC,YAAnC,CAAiDd,KAAjD,CAAD,CAAR,CACD,CAFQ,CAEN,CAACH,QAAD,CAAWG,KAAX,CAFM,CAAT,CAGA,mBACE,yBACGK,OAAO,EAAIA,OAAO,CAACU,MAAR,CAAiB,CAA5B,CACCV,OAAO,CAACW,GAAR,CAAY,SAAAf,IAAI,qBACd,KAAC,IAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,SAAS,CAAE,IAHb,CAIE,iBAAiB,CAAEU,iBAJrB,CAKE,YAAY,CAAER,YALhB,CAME,MAAM,CAAEC,MANV,EACOH,IAAI,CAACS,GADZ,CADc,EAAhB,CADD,cAYC,aAAK,SAAS,CAAC,kBAAf,wBACE,WAAG,KAAK,CAAE,CAAEO,KAAK,CAAE,SAAT,CAAV,gDACqC,GADrC,GADF,cAIE,KAAC,IAAD,EAAM,EAAE,CAAC,aAAT,CAAuB,SAAS,CAAC,cAAjC,yBAJF,GAbJ,EADF,CAyBD,CAhDD,CAkDA,cAAetB,CAAAA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Post from \"../components/Post\";\nimport { Link } from \"react-router-dom\";\n\nlet MyPostsCon = props => {\n  const dispatch = useDispatch();\n  const { token, posts, user, smallLoading, postId } = useSelector(\n    ({\n      userProfile: { user, token },\n      post: { posts, smallLoading, postId }\n    }) => ({\n      token,\n      posts,\n      user,\n      smallLoading,\n      postId\n    })\n  );\n  let myposts = posts.filter(p => p.postedBy.id === user._id);\n\n  let deletePostHandler = postId =>\n    dispatch(\n      allActions.postActions.deletePost(\"/user/post/delete\", postId, token)\n    );\n  useEffect(() => {\n    dispatch(allActions.postActions.getAllPosts(\"/user/post\", token));\n  }, [dispatch, token]);\n  return (\n    <>\n      {myposts && myposts.length > 0 ? (\n        myposts.map(post => (\n          <Post\n            key={post._id}\n            post={post}\n            deletable={true}\n            deletePostHandler={deletePostHandler}\n            smallLoading={smallLoading}\n            postId={postId}\n          />\n        ))\n      ) : (\n        <div className=\"text-center mt-4\">\n          <p style={{ color: \"dimgrey\" }}>\n            you have not created any post yet.{\" \"}\n          </p>\n          <Link to=\"/createpost\" className=\"btn btn-link\">\n            Create Post\n          </Link>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MyPostsCon;\n"]},"metadata":{},"sourceType":"module"}