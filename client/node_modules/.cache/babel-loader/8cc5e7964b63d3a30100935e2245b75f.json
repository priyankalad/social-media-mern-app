{"ast":null,"code":"import _objectSpread from\"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{jsx as _jsx}from\"react/jsx-runtime\";import _objectWithoutProperties from\"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from\"react\";import{Redirect,Route}from\"react-router-dom\";import{useSelector}from\"react-redux\";var PrivateRoute=function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var isUserLoggedIn=useSelector(function(state){return state.userProfile.isLoggedIn;});return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){return isUserLoggedIn?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):/*#__PURE__*/_jsx(Redirect,{to:\"/login\"});}}));};export default PrivateRoute;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/components/PrivateRoute.js"],"names":["React","Redirect","Route","useSelector","PrivateRoute","Component","component","rest","isUserLoggedIn","state","userProfile","isLoggedIn","props"],"mappings":"0aAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,kBAAhC,CACA,OAASC,WAAT,KAA4B,aAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAuC,IAAzBC,CAAAA,SAAyB,MAApCC,SAAoC,CAAXC,IAAW,8CAC1D,GAAMC,CAAAA,cAAc,CAAGL,WAAW,CAAC,SAAAM,KAAK,QAAIA,CAAAA,KAAK,CAACC,WAAN,CAAkBC,UAAtB,EAAN,CAAlC,CACA,mBACE,KAAC,KAAD,gCACMJ,IADN,MAEE,MAAM,CAAE,gBAAAK,KAAK,QACXJ,CAAAA,cAAc,cAAG,KAAC,SAAD,kBAAeI,KAAf,EAAH,cAA8B,KAAC,QAAD,EAAU,EAAE,CAAC,QAAb,EADjC,EAFf,GADF,CAQD,CAVD,CAYA,cAAeR,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const isUserLoggedIn = useSelector(state => state.userProfile.isLoggedIn);\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        isUserLoggedIn ? <Component {...props} /> : <Redirect to=\"/login\" />\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n"]},"metadata":{},"sourceType":"module"}