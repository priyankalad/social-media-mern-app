{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyFollowersCon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport MyFollowers from \"../components/MyFollowers\";\nexport default function MyFollowersCon(props) {\n  _s();\n\n  let {\n    centralLoading,\n    followers,\n    token,\n    followingUsers\n  } = useSelector(({\n    followUnfollow: {\n      centralLoading,\n      followers,\n      followingUsers\n    },\n    userProfile: {\n      token\n    }\n  }) => ({\n    centralLoading,\n    followers,\n    token,\n    followingUsers\n  }));\n  let dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(allActions.followUnfollowActions.getMyFollowers(\"/user/followers\", token));\n  }, [dispatch, token]);\n  attachFollowFlag(followers, followingUsers);\n  return /*#__PURE__*/_jsxDEV(MyFollowers, {\n    loading: centralLoading,\n    users: followers,\n    token: token,\n    dispatch: dispatch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MyFollowersCon, \"/JXWtfBNibLfBW/mUAUh2RxA5ts=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MyFollowersCon;\n\nlet attachFollowFlag = (followers, following) => {\n  let hashSet = new Set();\n  following.forEach(u => hashSet.add(u._id));\n  followers.forEach(u => {\n    u.isFollowing = hashSet.has(u._id) ? true : false;\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"MyFollowersCon\");","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyFollowersCon.js"],"names":["React","useEffect","useDispatch","useSelector","allActions","MyFollowers","MyFollowersCon","props","centralLoading","followers","token","followingUsers","followUnfollow","userProfile","dispatch","followUnfollowActions","getMyFollowers","attachFollowFlag","following","hashSet","Set","forEach","u","add","_id","isFollowing","has"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,eAAe,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC5C,MAAI;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA;AAApC,MAAuDR,WAAW,CACpE,CAAC;AACCS,IAAAA,cAAc,EAAE;AAAEJ,MAAAA,cAAF;AAAkBC,MAAAA,SAAlB;AAA6BE,MAAAA;AAA7B,KADjB;AAECE,IAAAA,WAAW,EAAE;AAAEH,MAAAA;AAAF;AAFd,GAAD,MAGO;AACLF,IAAAA,cADK;AAELC,IAAAA,SAFK;AAGLC,IAAAA,KAHK;AAILC,IAAAA;AAJK,GAHP,CADoE,CAAtE;AAYA,MAAIG,QAAQ,GAAGZ,WAAW,EAA1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ,CACNV,UAAU,CAACW,qBAAX,CAAiCC,cAAjC,CAAgD,iBAAhD,EAAmEN,KAAnE,CADM,CAAR;AAGD,GAJQ,EAIN,CAACI,QAAD,EAAWJ,KAAX,CAJM,CAAT;AAMAO,EAAAA,gBAAgB,CAACR,SAAD,EAAYE,cAAZ,CAAhB;AAEA,sBACE,QAAC,WAAD;AACE,IAAA,OAAO,EAAEH,cADX;AAEE,IAAA,KAAK,EAAEC,SAFT;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,QAAQ,EAAEI;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA/BuBR,c;UACqCH,W,EAY5CD,W;;;KAbOI,c;;AAiCxB,IAAIW,gBAAgB,GAAG,CAACR,SAAD,EAAYS,SAAZ,KAA0B;AAC/C,MAAIC,OAAO,GAAG,IAAIC,GAAJ,EAAd;AACAF,EAAAA,SAAS,CAACG,OAAV,CAAkBC,CAAC,IAAIH,OAAO,CAACI,GAAR,CAAYD,CAAC,CAACE,GAAd,CAAvB;AAEAf,EAAAA,SAAS,CAACY,OAAV,CAAkBC,CAAC,IAAI;AACrBA,IAAAA,CAAC,CAACG,WAAF,GAAgBN,OAAO,CAACO,GAAR,CAAYJ,CAAC,CAACE,GAAd,IAAqB,IAArB,GAA4B,KAA5C;AACD,GAFD;AAGD,CAPD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport MyFollowers from \"../components/MyFollowers\";\nexport default function MyFollowersCon(props) {\n  let { centralLoading, followers, token, followingUsers } = useSelector(\n    ({\n      followUnfollow: { centralLoading, followers, followingUsers },\n      userProfile: { token }\n    }) => ({\n      centralLoading,\n      followers,\n      token,\n      followingUsers\n    })\n  );\n\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      allActions.followUnfollowActions.getMyFollowers(\"/user/followers\", token)\n    );\n  }, [dispatch, token]);\n\n  attachFollowFlag(followers, followingUsers);\n\n  return (\n    <MyFollowers\n      loading={centralLoading}\n      users={followers}\n      token={token}\n      dispatch={dispatch}\n    />\n  );\n}\n\nlet attachFollowFlag = (followers, following) => {\n  let hashSet = new Set();\n  following.forEach(u => hashSet.add(u._id));\n\n  followers.forEach(u => {\n    u.isFollowing = hashSet.has(u._id) ? true : false;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}