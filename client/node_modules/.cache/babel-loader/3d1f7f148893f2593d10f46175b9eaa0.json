{"ast":null,"code":"import { EDIT_REQUEST, EDIT_SUCCESS, EDIT_FAILURE, GET_PROFILE_SUCCESS, GET_PROFILE_REQUEST, GET_PROFILE_FAILURE, UPLOAD_IMAGE, CHANGE_VIEW_MODE, DELETE_PROFILE_REQUEST, DELETE_PROFILE_SUCCESS, DELETE_PROFILE_FAILURE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, CLEAR_MESSAGE } from \"./userProfileActionTypes\"; // Actions\n\nconst logout = () => {\n  return {\n    type: LOGOUT\n  };\n};\n\nconst clearMessage = () => {\n  return {\n    type: CLEAR_MESSAGE\n  };\n};\n\nconst login = (url, data) => {\n  return {\n    types: [LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"post\",\n        data\n      }\n    }\n  };\n};\n\nconst changeViewMode = viewMode => {\n  return {\n    type: CHANGE_VIEW_MODE,\n    payload: viewMode\n  };\n};\n\nconst uploadImage = imageFile => {\n  return {\n    type: UPLOAD_IMAGE,\n    payload: imageFile\n  };\n};\n\nconst getUserProfile = (url, token) => {\n  return {\n    types: [GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, GET_PROFILE_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"get\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    }\n  };\n};\n\nconst editUserProfile = (url, data, token) => {\n  console.log(data);\n  const formData = getFormData(data);\n  return {\n    types: [EDIT_REQUEST, EDIT_SUCCESS, EDIT_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"post\",\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      }\n    }\n  };\n};\n\nconst deleteProfile = (url, token) => {\n  return {\n    types: [DELETE_PROFILE_REQUEST, DELETE_PROFILE_SUCCESS, DELETE_PROFILE_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"delete\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }\n    }\n  };\n};\n\nfunction getFormData(object) {\n  let formData = new FormData();\n\n  for (var key in object) {\n    console.log(key, object[key]);\n    formData.append(key, object[key]);\n  }\n\n  return formData;\n}\n\nexport default {\n  login,\n  logout,\n  editUserProfile,\n  getUserProfile,\n  uploadImage,\n  changeViewMode,\n  deleteProfile,\n  clearMessage\n};","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/userProfile/userProfileActions.js"],"names":["EDIT_REQUEST","EDIT_SUCCESS","EDIT_FAILURE","GET_PROFILE_SUCCESS","GET_PROFILE_REQUEST","GET_PROFILE_FAILURE","UPLOAD_IMAGE","CHANGE_VIEW_MODE","DELETE_PROFILE_REQUEST","DELETE_PROFILE_SUCCESS","DELETE_PROFILE_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","CLEAR_MESSAGE","logout","type","clearMessage","login","url","data","types","payload","client","request","method","changeViewMode","viewMode","uploadImage","imageFile","getUserProfile","token","headers","Authorization","editUserProfile","console","log","formData","getFormData","deleteProfile","object","FormData","key","append"],"mappings":"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","sourcesContent":["import {\n  EDIT_REQUEST,\n  EDIT_SUCCESS,\n  EDIT_FAILURE,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_FAILURE,\n  UPLOAD_IMAGE,\n  CHANGE_VIEW_MODE,\n  DELETE_PROFILE_REQUEST,\n  DELETE_PROFILE_SUCCESS,\n  DELETE_PROFILE_FAILURE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n  CLEAR_MESSAGE,\n} from \"./userProfileActionTypes\";\n\n// Actions\nconst logout = () => {\n  return {\n    type: LOGOUT,\n  };\n};\n\nconst clearMessage = () => {\n  return {\n    type: CLEAR_MESSAGE,\n  };\n};\n\nconst login = (url, data) => {\n  return {\n    types: [LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"post\",\n        data,\n      },\n    },\n  };\n};\n\nconst changeViewMode = (viewMode) => {\n  return {\n    type: CHANGE_VIEW_MODE,\n    payload: viewMode,\n  };\n};\n\nconst uploadImage = (imageFile) => {\n  return { type: UPLOAD_IMAGE, payload: imageFile };\n};\n\nconst getUserProfile = (url, token) => {\n  return {\n    types: [GET_PROFILE_REQUEST, GET_PROFILE_SUCCESS, GET_PROFILE_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"get\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    },\n  };\n};\n\nconst editUserProfile = (url, data, token) => {\n  console.log(data);\n  const formData = getFormData(data);\n  return {\n    types: [EDIT_REQUEST, EDIT_SUCCESS, EDIT_FAILURE],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"post\",\n        data: formData,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      },\n    },\n  };\n};\n\nconst deleteProfile = (url, token) => {\n  return {\n    types: [\n      DELETE_PROFILE_REQUEST,\n      DELETE_PROFILE_SUCCESS,\n      DELETE_PROFILE_FAILURE,\n    ],\n    payload: {\n      client: \"default\",\n      request: {\n        url: url,\n        method: \"delete\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      },\n    },\n  };\n};\n\nfunction getFormData(object) {\n  let formData = new FormData();\n  for (var key in object) {\n    console.log(key, object[key]);\n    formData.append(key, object[key]);\n  }\n  return formData;\n}\n\nexport default {\n  login,\n  logout,\n  editUserProfile,\n  getUserProfile,\n  uploadImage,\n  changeViewMode,\n  deleteProfile,\n  clearMessage,\n};\n"]},"metadata":{},"sourceType":"module"}