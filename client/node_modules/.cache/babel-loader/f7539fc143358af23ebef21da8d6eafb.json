{"ast":null,"code":"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\"; //import logger from \"redux-logger\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport { multiClientMiddleware } from \"redux-axios-middleware\";\nimport thunkMiddleware from \"redux-thunk\";\nimport clients from \"./clients\";\nimport middlewareConfig from \"./middlewareConfig\";\n\nconst saveState = state => {\n  try {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  } catch (err) {}\n};\n\nconst loadState = () => {\n  try {\n    let state = localStorage.getItem(\"state\");\n    if (state === null) return undefined;\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, applyMiddleware(thunkMiddleware, multiClientMiddleware(clients, middlewareConfig)));\nstore.subscribe(() => saveState({\n  userProfile: store.getState().userProfile\n}));\nexport default store;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/store.js"],"names":["createStore","applyMiddleware","rootReducer","multiClientMiddleware","thunkMiddleware","clients","middlewareConfig","saveState","state","localStorage","setItem","JSON","stringify","err","loadState","getItem","undefined","parse","persistedState","store","subscribe","userProfile","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,WAAP,MAAwB,eAAxB,C,CACA;AACA;;AACA,SAASC,qBAAT,QAAsC,wBAAtC;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AACFC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B;AACD,GAFD,CAEE,OAAOK,GAAP,EAAY,CAAE;AACjB,CAJD;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACtB,MAAI;AACF,QAAIN,KAAK,GAAGC,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAIP,KAAK,KAAK,IAAd,EAAoB,OAAOQ,SAAP;AACpB,WAAOL,IAAI,CAACM,KAAL,CAAWT,KAAX,CAAP;AACD,GAJD,CAIE,OAAOK,GAAP,EAAY;AACZ,WAAOG,SAAP;AACD;AACF,CARD;;AAUA,MAAME,cAAc,GAAGJ,SAAS,EAAhC;AAEA,MAAMK,KAAK,GAAGnB,WAAW,CACvBE,WADuB,EAEvBgB,cAFuB,EAIvBjB,eAAe,CACbG,eADa,EAEbD,qBAAqB,CAACE,OAAD,EAAUC,gBAAV,CAFR,CAJQ,CAAzB;AAUAa,KAAK,CAACC,SAAN,CAAgB,MAAMb,SAAS,CAAC;AAAEc,EAAAA,WAAW,EAAEF,KAAK,CAACG,QAAN,GAAiBD;AAAhC,CAAD,CAA/B;AAEA,eAAeF,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n//import logger from \"redux-logger\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { multiClientMiddleware } from \"redux-axios-middleware\";\nimport thunkMiddleware from \"redux-thunk\";\nimport clients from \"./clients\";\nimport middlewareConfig from \"./middlewareConfig\";\n\nconst saveState = (state) => {\n  try {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  } catch (err) {}\n};\n\nconst loadState = () => {\n  try {\n    let state = localStorage.getItem(\"state\");\n    if (state === null) return undefined;\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst persistedState = loadState();\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n\n  applyMiddleware(\n    thunkMiddleware,\n    multiClientMiddleware(clients, middlewareConfig)\n  )\n);\n\nstore.subscribe(() => saveState({ userProfile: store.getState().userProfile }));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}