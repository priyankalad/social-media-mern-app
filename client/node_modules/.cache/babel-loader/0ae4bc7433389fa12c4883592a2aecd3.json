{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/AllPostsCon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Post from \"../components/Post\";\nimport { Redirect } from \"react-router\";\n\nlet AllPostsCon = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [redirectTo, setRedirectTo] = useState(false);\n  const {\n    token,\n    posts,\n    smallLoading,\n    postId\n  } = useSelector(({\n    post: {\n      posts,\n      smallLoading,\n      postId\n    },\n    userProfile: {\n      token\n    }\n  }) => ({\n    token,\n    posts,\n    smallLoading,\n    postId\n  }));\n  useEffect(() => {\n    dispatch(allActions.postActions.getAllPosts(\"/user/post\", token)).then(res => {\n      let {\n        posts\n      } = res.payload.data;\n      if (res.type.indexOf(\"SUCCESS\") !== -1 && posts && posts.length === 0) setRedirectTo(true);\n    });\n    return () => {\n      dispatch(allActions.postActions.clearState());\n    };\n  }, [dispatch, token]);\n  return redirectTo ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/createpost\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts && posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post,\n      postId: postId,\n      smallLoading: smallLoading\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(AllPostsCon, \"qYyOWA81CkF1O+zuvMItXoyjo+0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AllPostsCon;\nexport default AllPostsCon;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllPostsCon\");","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/AllPostsCon.js"],"names":["React","useEffect","useState","useDispatch","useSelector","allActions","Post","Redirect","AllPostsCon","props","dispatch","redirectTo","setRedirectTo","token","posts","smallLoading","postId","post","userProfile","postActions","getAllPosts","then","res","payload","data","type","indexOf","length","clearState","map","_id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,IAAIC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM;AAAEW,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAyCZ,WAAW,CACxD,CAAC;AAAEa,IAAAA,IAAI,EAAE;AAAEH,MAAAA,KAAF;AAASC,MAAAA,YAAT;AAAuBC,MAAAA;AAAvB,KAAR;AAAyCE,IAAAA,WAAW,EAAE;AAAEL,MAAAA;AAAF;AAAtD,GAAD,MAAwE;AACtEA,IAAAA,KADsE;AAEtEC,IAAAA,KAFsE;AAGtEC,IAAAA,YAHsE;AAItEC,IAAAA;AAJsE,GAAxE,CADwD,CAA1D;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACL,UAAU,CAACc,WAAX,CAAuBC,WAAvB,CAAmC,YAAnC,EAAiDP,KAAjD,CAAD,CAAR,CAAkEQ,IAAlE,CACGC,GAAD,IAAS;AACP,UAAI;AAAER,QAAAA;AAAF,UAAYQ,GAAG,CAACC,OAAJ,CAAYC,IAA5B;AACA,UAAIF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,SAAjB,MAAgC,CAAC,CAAjC,IAAsCZ,KAAtC,IAA+CA,KAAK,CAACa,MAAN,KAAiB,CAApE,EACEf,aAAa,CAAC,IAAD,CAAb;AACH,KALH;AAOA,WAAO,MAAM;AACXF,MAAAA,QAAQ,CAACL,UAAU,CAACc,WAAX,CAAuBS,UAAvB,EAAD,CAAR;AACD,KAFD;AAGD,GAXQ,EAWN,CAAClB,QAAD,EAAWG,KAAX,CAXM,CAAT;AAYA,SAAOF,UAAU,gBACf,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADe,gBAGf;AAAA,cACGG,KAAK,IACJA,KAAK,CAACe,GAAN,CAAWZ,IAAD,iBACR,QAAC,IAAD;AAEE,MAAA,IAAI,EAAEA,IAFR;AAGE,MAAA,MAAM,EAAED,MAHV;AAIE,MAAA,YAAY,EAAED;AAJhB,OACOE,IAAI,CAACa,GADZ;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ,mBAHF;AAeD,CAtCD;;GAAItB,W;UACeL,W,EAE8BC,W;;;KAH7CI,W;AAwCJ,eAAeA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Post from \"../components/Post\";\nimport { Redirect } from \"react-router\";\n\nlet AllPostsCon = (props) => {\n  const dispatch = useDispatch();\n  const [redirectTo, setRedirectTo] = useState(false);\n  const { token, posts, smallLoading, postId } = useSelector(\n    ({ post: { posts, smallLoading, postId }, userProfile: { token } }) => ({\n      token,\n      posts,\n      smallLoading,\n      postId,\n    })\n  );\n  useEffect(() => {\n    dispatch(allActions.postActions.getAllPosts(\"/user/post\", token)).then(\n      (res) => {\n        let { posts } = res.payload.data;\n        if (res.type.indexOf(\"SUCCESS\") !== -1 && posts && posts.length === 0)\n          setRedirectTo(true);\n      }\n    );\n    return () => {\n      dispatch(allActions.postActions.clearState());\n    };\n  }, [dispatch, token]);\n  return redirectTo ? (\n    <Redirect to=\"/createpost\" />\n  ) : (\n    <>\n      {posts &&\n        posts.map((post) => (\n          <Post\n            key={post._id}\n            post={post}\n            postId={postId}\n            smallLoading={smallLoading}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default AllPostsCon;\n"]},"metadata":{},"sourceType":"module"}