{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import allActions from\"../redux/allActions\";import Post from\"../components/Post\";import{Redirect}from\"react-router\";var AllPostsCon=function AllPostsCon(props){var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),redirectTo=_useState2[0],setRedirectTo=_useState2[1];var _useSelector=useSelector(function(_ref){var _ref$post=_ref.post,posts=_ref$post.posts,smallLoading=_ref$post.smallLoading,postId=_ref$post.postId,token=_ref.userProfile.token;return{token:token,posts:posts,smallLoading:smallLoading,postId:postId};}),token=_useSelector.token,posts=_useSelector.posts,smallLoading=_useSelector.smallLoading,postId=_useSelector.postId;useEffect(function(){dispatch(allActions.postActions.getAllPosts(\"/user/post\",token)).then(function(res){var posts=res.payload.data.posts;if(res.type.indexOf(\"SUCCESS\")!==-1&&posts&&posts.length===0)setRedirectTo(true);});return function(){dispatch(allActions.postActions.clearState());};},[dispatch,token]);return redirectTo?/*#__PURE__*/_jsx(Redirect,{to:\"/createpost\"}):/*#__PURE__*/_jsx(_Fragment,{children:posts&&posts.map(function(post){return/*#__PURE__*/_jsx(Post,{post:post,postId:postId,smallLoading:smallLoading},post._id);})});};export default AllPostsCon;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/AllPostsCon.js"],"names":["React","useEffect","useState","useDispatch","useSelector","allActions","Post","Redirect","AllPostsCon","props","dispatch","redirectTo","setRedirectTo","post","posts","smallLoading","postId","token","userProfile","postActions","getAllPosts","then","res","payload","data","type","indexOf","length","clearState","map","_id"],"mappings":"sRAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,GAAIC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC3B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CAD2B,cAESD,QAAQ,CAAC,KAAD,CAFjB,wCAEpBS,UAFoB,eAERC,aAFQ,gCAGoBR,WAAW,CACxD,kCAAGS,IAAH,CAAWC,KAAX,WAAWA,KAAX,CAAkBC,YAAlB,WAAkBA,YAAlB,CAAgCC,MAAhC,WAAgCA,MAAhC,CAAyDC,KAAzD,MAA0CC,WAA1C,CAAyDD,KAAzD,OAAwE,CACtEA,KAAK,CAALA,KADsE,CAEtEH,KAAK,CAALA,KAFsE,CAGtEC,YAAY,CAAZA,YAHsE,CAItEC,MAAM,CAANA,MAJsE,CAAxE,EADwD,CAH/B,CAGnBC,KAHmB,cAGnBA,KAHmB,CAGZH,KAHY,cAGZA,KAHY,CAGLC,YAHK,cAGLA,YAHK,CAGSC,MAHT,cAGSA,MAHT,CAW3Bf,SAAS,CAAC,UAAM,CACdS,QAAQ,CAACL,UAAU,CAACc,WAAX,CAAuBC,WAAvB,CAAmC,YAAnC,CAAiDH,KAAjD,CAAD,CAAR,CAAkEI,IAAlE,CACE,SAACC,GAAD,CAAS,IACDR,CAAAA,KADC,CACSQ,GAAG,CAACC,OAAJ,CAAYC,IADrB,CACDV,KADC,CAEP,GAAIQ,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiB,SAAjB,IAAgC,CAAC,CAAjC,EAAsCZ,KAAtC,EAA+CA,KAAK,CAACa,MAAN,GAAiB,CAApE,CACEf,aAAa,CAAC,IAAD,CAAb,CACH,CALH,EAOA,MAAO,WAAM,CACXF,QAAQ,CAACL,UAAU,CAACc,WAAX,CAAuBS,UAAvB,EAAD,CAAR,CACD,CAFD,CAGD,CAXQ,CAWN,CAAClB,QAAD,CAAWO,KAAX,CAXM,CAAT,CAYA,MAAON,CAAAA,UAAU,cACf,KAAC,QAAD,EAAU,EAAE,CAAC,aAAb,EADe,cAGf,yBACGG,KAAK,EACJA,KAAK,CAACe,GAAN,CAAU,SAAChB,IAAD,qBACR,KAAC,IAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,MAAM,CAAEG,MAHV,CAIE,YAAY,CAAED,YAJhB,EACOF,IAAI,CAACiB,GADZ,CADQ,EAAV,CAFJ,EAHF,CAeD,CAtCD,CAwCA,cAAetB,CAAAA,WAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Post from \"../components/Post\";\nimport { Redirect } from \"react-router\";\n\nlet AllPostsCon = (props) => {\n  const dispatch = useDispatch();\n  const [redirectTo, setRedirectTo] = useState(false);\n  const { token, posts, smallLoading, postId } = useSelector(\n    ({ post: { posts, smallLoading, postId }, userProfile: { token } }) => ({\n      token,\n      posts,\n      smallLoading,\n      postId,\n    })\n  );\n  useEffect(() => {\n    dispatch(allActions.postActions.getAllPosts(\"/user/post\", token)).then(\n      (res) => {\n        let { posts } = res.payload.data;\n        if (res.type.indexOf(\"SUCCESS\") !== -1 && posts && posts.length === 0)\n          setRedirectTo(true);\n      }\n    );\n    return () => {\n      dispatch(allActions.postActions.clearState());\n    };\n  }, [dispatch, token]);\n  return redirectTo ? (\n    <Redirect to=\"/createpost\" />\n  ) : (\n    <>\n      {posts &&\n        posts.map((post) => (\n          <Post\n            key={post._id}\n            post={post}\n            postId={postId}\n            smallLoading={smallLoading}\n          />\n        ))}\n    </>\n  );\n};\n\nexport default AllPostsCon;\n"]},"metadata":{},"sourceType":"module"}