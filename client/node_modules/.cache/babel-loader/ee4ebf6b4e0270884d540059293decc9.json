{"ast":null,"code":"import{createStore,applyMiddleware}from\"redux\";import rootReducer from\"./rootReducer\";//import logger from \"redux-logger\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\nimport{multiClientMiddleware}from\"redux-axios-middleware\";import thunkMiddleware from\"redux-thunk\";import clients from\"./clients\";import middlewareConfig from\"./middlewareConfig\";var saveState=function saveState(state){try{localStorage.setItem(\"state\",JSON.stringify(state));}catch(err){}};var loadState=function loadState(){try{var state=localStorage.getItem(\"state\");if(state===null)return undefined;return JSON.parse(state);}catch(err){return undefined;}};var persistedState=loadState();var store=createStore(rootReducer,persistedState,applyMiddleware(thunkMiddleware,multiClientMiddleware(clients,middlewareConfig)));store.subscribe(function(){return saveState({userProfile:store.getState().userProfile});});export default store;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/store.js"],"names":["createStore","applyMiddleware","rootReducer","multiClientMiddleware","thunkMiddleware","clients","middlewareConfig","saveState","state","localStorage","setItem","JSON","stringify","err","loadState","getItem","undefined","parse","persistedState","store","subscribe","userProfile","getState"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA;AACA;AACA,OAASC,qBAAT,KAAsC,wBAAtC,CACA,MAAOC,CAAAA,eAAP,KAA4B,aAA5B,CACA,MAAOC,CAAAA,OAAP,KAAoB,WAApB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,CAC3B,GAAI,CACFC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8BC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAA9B,EACD,CAAC,MAAOK,GAAP,CAAY,CAAE,CACjB,CAJD,CAMA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CACtB,GAAI,CACF,GAAIN,CAAAA,KAAK,CAAGC,YAAY,CAACM,OAAb,CAAqB,OAArB,CAAZ,CACA,GAAIP,KAAK,GAAK,IAAd,CAAoB,MAAOQ,CAAAA,SAAP,CACpB,MAAOL,CAAAA,IAAI,CAACM,KAAL,CAAWT,KAAX,CAAP,CACD,CAAC,MAAOK,GAAP,CAAY,CACZ,MAAOG,CAAAA,SAAP,CACD,CACF,CARD,CAUA,GAAME,CAAAA,cAAc,CAAGJ,SAAS,EAAhC,CAEA,GAAMK,CAAAA,KAAK,CAAGnB,WAAW,CACvBE,WADuB,CAEvBgB,cAFuB,CAIvBjB,eAAe,CACbG,eADa,CAEbD,qBAAqB,CAACE,OAAD,CAAUC,gBAAV,CAFR,CAJQ,CAAzB,CAUAa,KAAK,CAACC,SAAN,CAAgB,iBAAMb,CAAAA,SAAS,CAAC,CAAEc,WAAW,CAAEF,KAAK,CAACG,QAAN,GAAiBD,WAAhC,CAAD,CAAf,EAAhB,EAEA,cAAeF,CAAAA,KAAf","sourcesContent":["import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./rootReducer\";\n//import logger from \"redux-logger\";\n//import { composeWithDevTools } from \"redux-devtools-extension\";\nimport { multiClientMiddleware } from \"redux-axios-middleware\";\nimport thunkMiddleware from \"redux-thunk\";\nimport clients from \"./clients\";\nimport middlewareConfig from \"./middlewareConfig\";\n\nconst saveState = (state) => {\n  try {\n    localStorage.setItem(\"state\", JSON.stringify(state));\n  } catch (err) {}\n};\n\nconst loadState = () => {\n  try {\n    let state = localStorage.getItem(\"state\");\n    if (state === null) return undefined;\n    return JSON.parse(state);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nconst persistedState = loadState();\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n\n  applyMiddleware(\n    thunkMiddleware,\n    multiClientMiddleware(clients, middlewareConfig)\n  )\n);\n\nstore.subscribe(() => saveState({ userProfile: store.getState().userProfile }));\n\nexport default store;\n"]},"metadata":{},"sourceType":"module"}