{"ast":null,"code":"var middlewareConfig={interceptors:{request:[{success:function success(_ref,req){var getState=_ref.getState,dispatch=_ref.dispatch,getSourceAction=_ref.getSourceAction;// console.log(req); //contains information about request object\n//...\nreturn req;},error:function error(_ref2,_error){var getState=_ref2.getState,dispatch=_ref2.dispatch,getSourceAction=_ref2.getSourceAction;//...\n//  console.log(error);\nreturn _error;}}],response:[{success:function success(_ref3,res){var getState=_ref3.getState,dispatch=_ref3.dispatch,getSourceAction=_ref3.getSourceAction;// console.log(res); //contains information about request object\n//...\nreturn Promise.resolve(res);},error:function error(_ref4,_error2){var getState=_ref4.getState,dispatch=_ref4.dispatch,getSourceAction=_ref4.getSourceAction;return Promise.reject(_error2);}}]}};export default middlewareConfig;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/middlewareConfig.js"],"names":["middlewareConfig","interceptors","request","success","req","getState","dispatch","getSourceAction","error","response","res","Promise","resolve","reject"],"mappings":"AAAA,GAAMA,CAAAA,gBAAgB,CAAG,CACvBC,YAAY,CAAE,CACZC,OAAO,CAAE,CACP,CACEC,OAAO,CAAE,sBAAkDC,GAAlD,CAAuD,IAA5CC,CAAAA,QAA4C,MAA5CA,QAA4C,CAAlCC,QAAkC,MAAlCA,QAAkC,CAAxBC,eAAwB,MAAxBA,eAAwB,CAC9D;AACA;AACA,MAAOH,CAAAA,GAAP,CACD,CALH,CAMEI,KAAK,CAAE,qBAAkDA,MAAlD,CAAyD,IAA9CH,CAAAA,QAA8C,OAA9CA,QAA8C,CAApCC,QAAoC,OAApCA,QAAoC,CAA1BC,eAA0B,OAA1BA,eAA0B,CAC9D;AACA;AACA,MAAOC,CAAAA,MAAP,CACD,CAVH,CADO,CADG,CAeZC,QAAQ,CAAE,CACR,CACEN,OAAO,CAAE,uBAAkDO,GAAlD,CAAuD,IAA5CL,CAAAA,QAA4C,OAA5CA,QAA4C,CAAlCC,QAAkC,OAAlCA,QAAkC,CAAxBC,eAAwB,OAAxBA,eAAwB,CAC9D;AACA;AACA,MAAOI,CAAAA,OAAO,CAACC,OAAR,CAAgBF,GAAhB,CAAP,CACD,CALH,CAMEF,KAAK,CAAE,qBAAkDA,OAAlD,CAAyD,IAA9CH,CAAAA,QAA8C,OAA9CA,QAA8C,CAApCC,QAAoC,OAApCA,QAAoC,CAA1BC,eAA0B,OAA1BA,eAA0B,CAC9D,MAAOI,CAAAA,OAAO,CAACE,MAAR,CAAeL,OAAf,CAAP,CACD,CARH,CADQ,CAfE,CADS,CAAzB,CA+BA,cAAeR,CAAAA,gBAAf","sourcesContent":["const middlewareConfig = {\n  interceptors: {\n    request: [\n      {\n        success: function({ getState, dispatch, getSourceAction }, req) {\n          // console.log(req); //contains information about request object\n          //...\n          return req;\n        },\n        error: function({ getState, dispatch, getSourceAction }, error) {\n          //...\n          //  console.log(error);\n          return error;\n        }\n      }\n    ],\n    response: [\n      {\n        success: function({ getState, dispatch, getSourceAction }, res) {\n          // console.log(res); //contains information about request object\n          //...\n          return Promise.resolve(res);\n        },\n        error: function({ getState, dispatch, getSourceAction }, error) {\n          return Promise.reject(error);\n        }\n      }\n    ]\n  }\n};\n\nexport default middlewareConfig;\n"]},"metadata":{},"sourceType":"module"}