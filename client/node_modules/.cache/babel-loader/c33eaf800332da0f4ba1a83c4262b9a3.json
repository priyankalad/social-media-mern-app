{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/CreateCommentCon.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport CommentModal from \"../components/CommentModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Loading from \"../components/Loading\";\nexport default function CreateCommentCon(props) {\n  _s();\n\n  let {\n    post,\n    modalShow,\n    modalDisplay,\n    handleHideCommentModal\n  } = props;\n  const {\n    token,\n    loading\n  } = useSelector(({\n    userProfile: {\n      token\n    },\n    post: {\n      loading\n    }\n  }) => ({\n    token,\n    loading\n  }));\n  let dispatch = useDispatch();\n\n  let handleCreateComment = comment => {\n    dispatch(allActions.postActions.createComment(\"/user/post/comment\", token, post._id, comment)).then(res => {\n      if (!res.error) {\n        handleHideCommentModal();\n      }\n    });\n  };\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loading, {\n    isLoading: loading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(CommentModal, {\n    handleCreateComment: handleCreateComment,\n    post: post,\n    modalShow: modalShow,\n    modalDisplay: modalDisplay,\n    handleHideCommentModal: handleHideCommentModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateCommentCon, \"fvkatLgqAG3zNotMmjdYMYmBM+g=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CreateCommentCon;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCommentCon\");","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/CreateCommentCon.js"],"names":["React","CommentModal","useDispatch","useSelector","allActions","Loading","CreateCommentCon","props","post","modalShow","modalDisplay","handleHideCommentModal","token","loading","userProfile","dispatch","handleCreateComment","comment","postActions","createComment","_id","then","res","error"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,SAAR;AAAmBC,IAAAA,YAAnB;AAAiCC,IAAAA;AAAjC,MAA4DJ,KAAhE;AACA,QAAM;AAAEK,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAqBV,WAAW,CACpC,CAAC;AAAEW,IAAAA,WAAW,EAAE;AAAEF,MAAAA;AAAF,KAAf;AAA0BJ,IAAAA,IAAI,EAAE;AAAEK,MAAAA;AAAF;AAAhC,GAAD,MAAoD;AAClDD,IAAAA,KADkD;AAElDC,IAAAA;AAFkD,GAApD,CADoC,CAAtC;AAMA,MAAIE,QAAQ,GAAGb,WAAW,EAA1B;;AAEA,MAAIc,mBAAmB,GAAGC,OAAO,IAAI;AACnCF,IAAAA,QAAQ,CACNX,UAAU,CAACc,WAAX,CAAuBC,aAAvB,CACE,oBADF,EAEEP,KAFF,EAGEJ,IAAI,CAACY,GAHP,EAIEH,OAJF,CADM,CAAR,CAOEI,IAPF,CAOOC,GAAG,IAAI;AACZ,UAAI,CAACA,GAAG,CAACC,KAAT,EAAgB;AACdZ,QAAAA,sBAAsB;AACvB;AACF,KAXD;AAYD,GAbD;;AAcA,SAAOE,OAAO,gBACZ,QAAC,OAAD;AAAS,IAAA,SAAS,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,UADY,gBAGZ,QAAC,YAAD;AACE,IAAA,mBAAmB,EAAEG,mBADvB;AAEE,IAAA,IAAI,EAAER,IAFR;AAGE,IAAA,SAAS,EAAEC,SAHb;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAKE,IAAA,sBAAsB,EAAEC;AAL1B;AAAA;AAAA;AAAA;AAAA,UAHF;AAWD;;GAnCuBL,gB;UAEKH,W,EAMZD,W;;;KAROI,gB","sourcesContent":["import React from \"react\";\nimport CommentModal from \"../components/CommentModal\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Loading from \"../components/Loading\";\n\nexport default function CreateCommentCon(props) {\n  let { post, modalShow, modalDisplay, handleHideCommentModal } = props;\n  const { token, loading } = useSelector(\n    ({ userProfile: { token }, post: { loading } }) => ({\n      token,\n      loading\n    })\n  );\n  let dispatch = useDispatch();\n\n  let handleCreateComment = comment => {\n    dispatch(\n      allActions.postActions.createComment(\n        \"/user/post/comment\",\n        token,\n        post._id,\n        comment\n      )\n    ).then(res => {\n      if (!res.error) {\n        handleHideCommentModal();\n      }\n    });\n  };\n  return loading ? (\n    <Loading isLoading={loading} />\n  ) : (\n    <CommentModal\n      handleCreateComment={handleCreateComment}\n      post={post}\n      modalShow={modalShow}\n      modalDisplay={modalDisplay}\n      handleHideCommentModal={handleHideCommentModal}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}