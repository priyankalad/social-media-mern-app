{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";import{reduxForm,SubmissionError}from\"redux-form\";import{useDispatch,connect}from\"react-redux\";import allActions from\"../redux/allActions\";import Loading from\"../components/Loading\";import\"../index.css\";import validateForm from\"../formValidations/validations\";import EditProfile from\"../components/EditProfile\";import ViewProfile from\"../components/ViewProfile\";import ProfileHeader from\"../components/ProfileHeader\";var validate=function validate(values){return validateForm(values,\"editprofile\");};function EditProfileCon(props){var dispatch=useDispatch();var handleSubmit=props.handleSubmit,reset=props.reset,token=props.token,loading=props.loading,errorMessage=props.errorMessage,viewMode=props.viewMode,deleteSuccess=props.deleteSuccess;if(deleteSuccess){dispatch(allActions.userProfileActions.logout());props.history.push(\"/login\");}var changeViewModeHandler=function changeViewModeHandler(viewMode){return dispatch(allActions.userProfileActions.changeViewMode(viewMode));};var fileChangeHandler=function fileChangeHandler(event){var selectedFile=event.target.files[0];dispatch(allActions.userProfileActions.uploadImage(selectedFile));};var deleteProfileHandler=function deleteProfileHandler(e){e.preventDefault();if(window.confirm(\"Are you sure, you want to delete the profile?\")){dispatch(allActions.userProfileActions.deleteProfile(\"/user/delete\",token));}else return false;};var genderOptions={male:{label:\"Male\",selected:false},female:{label:\"Female\",selected:false},other:{label:\"Other\",selected:false}};var image_style={width:\"130px\",height:\"130px\",borderRadius:\"50%\"};var editForm=/*#__PURE__*/_jsx(EditProfile,{reset:reset,errorMessage:errorMessage,handleSubmit:handleSubmit,changeViewModeHandler:changeViewModeHandler,fileChangeHandler:fileChangeHandler,imageStyle:image_style,deleteProfileHandler:deleteProfileHandler,user:props.initialValues,updatedImageFileURL:props.updatedImageFileURL,genderOptions:genderOptions});var viewForm=/*#__PURE__*/_jsx(ViewProfile,{user:props.initialValues,imageStyle:image_style,genderOptions:genderOptions});useEffect(function(){dispatch(allActions.userProfileActions.getUserProfile(\"/user/profile\",token));return function(){changeViewModeHandler(\"view\");};},[dispatch,token]);return loading?/*#__PURE__*/_jsx(Loading,{isLoading:loading}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ProfileHeader,{viewMode:viewMode,changeViewModeHandler:changeViewModeHandler}),viewMode===\"edit\"?editForm:viewForm]});}var onSubmit=function onSubmit(values,dispatch,props){var token=props.token,updatedImageFile=props.updatedImageFile;if(updatedImageFile)values.profilePic=updatedImageFile;return dispatch(allActions.userProfileActions.editUserProfile(\"/user/profile\",values,token)).then(function(res){if(res.error){var errors=res.error.response.data.errors;if(errors){throw new SubmissionError(errors);}}});};var mapStateToProps=function mapStateToProps(state,props){var _state$userProfile=state.userProfile,user=_state$userProfile.user,updatedImageFile=_state$userProfile.updatedImageFile,updatedImageFileURL=_state$userProfile.updatedImageFileURL,errorMessage=_state$userProfile.errorMessage,loading=_state$userProfile.loading,viewMode=_state$userProfile.viewMode,deleteSuccess=_state$userProfile.successMessage;return{initialValues:user,updatedImageFile:updatedImageFile,updatedImageFileURL:updatedImageFileURL,token:state.userProfile.token,errorMessage:errorMessage,loading:loading,viewMode:viewMode,deleteSuccess:deleteSuccess,deleteError:errorMessage};};export default connect(mapStateToProps)(reduxForm({form:\"editProfile\",enableReinitialize:true,onSubmit:onSubmit,validate:validate})(EditProfileCon));","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/EditProfileCon.js"],"names":["React","useEffect","reduxForm","SubmissionError","useDispatch","connect","allActions","Loading","validateForm","EditProfile","ViewProfile","ProfileHeader","validate","values","EditProfileCon","props","dispatch","handleSubmit","reset","token","loading","errorMessage","viewMode","deleteSuccess","userProfileActions","logout","history","push","changeViewModeHandler","changeViewMode","fileChangeHandler","event","selectedFile","target","files","uploadImage","deleteProfileHandler","e","preventDefault","window","confirm","deleteProfile","genderOptions","male","label","selected","female","other","image_style","width","height","borderRadius","editForm","initialValues","updatedImageFileURL","viewForm","getUserProfile","onSubmit","updatedImageFile","profilePic","editUserProfile","then","res","error","errors","response","data","mapStateToProps","state","userProfile","user","successMessage","deleteError","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { reduxForm, SubmissionError } from \"redux-form\";\nimport { useDispatch, connect } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Loading from \"../components/Loading\";\n\nimport \"../index.css\";\nimport validateForm from \"../formValidations/validations\";\nimport EditProfile from \"../components/EditProfile\";\nimport ViewProfile from \"../components/ViewProfile\";\nimport ProfileHeader from \"../components/ProfileHeader\";\n\nconst validate = (values) => {\n  return validateForm(values, \"editprofile\");\n};\nfunction EditProfileCon(props) {\n  const dispatch = useDispatch();\n  const {\n    handleSubmit,\n    reset,\n    token,\n    loading,\n    errorMessage,\n    viewMode,\n    deleteSuccess,\n  } = props;\n  if (deleteSuccess) {\n    dispatch(allActions.userProfileActions.logout());\n    props.history.push(\"/login\");\n  }\n  let changeViewModeHandler = (viewMode) =>\n    dispatch(allActions.userProfileActions.changeViewMode(viewMode));\n  let fileChangeHandler = (event) => {\n    let selectedFile = event.target.files[0];\n    dispatch(allActions.userProfileActions.uploadImage(selectedFile));\n  };\n  let deleteProfileHandler = (e) => {\n    e.preventDefault();\n    if (window.confirm(\"Are you sure, you want to delete the profile?\")) {\n      dispatch(\n        allActions.userProfileActions.deleteProfile(\"/user/delete\", token)\n      );\n    } else return false;\n  };\n  let genderOptions = {\n    male: { label: \"Male\", selected: false },\n    female: { label: \"Female\", selected: false },\n    other: { label: \"Other\", selected: false },\n  };\n\n  const image_style = {\n    width: \"130px\",\n    height: \"130px\",\n    borderRadius: \"50%\",\n  };\n  let editForm = (\n    <EditProfile\n      reset={reset}\n      errorMessage={errorMessage}\n      handleSubmit={handleSubmit}\n      changeViewModeHandler={changeViewModeHandler}\n      fileChangeHandler={fileChangeHandler}\n      imageStyle={image_style}\n      deleteProfileHandler={deleteProfileHandler}\n      user={props.initialValues}\n      updatedImageFileURL={props.updatedImageFileURL}\n      genderOptions={genderOptions}\n    />\n  );\n  let viewForm = (\n    <ViewProfile\n      user={props.initialValues}\n      imageStyle={image_style}\n      genderOptions={genderOptions}\n    />\n  );\n\n  useEffect(() => {\n    dispatch(\n      allActions.userProfileActions.getUserProfile(\"/user/profile\", token)\n    );\n    return () => {\n      changeViewModeHandler(\"view\");\n    };\n  }, [dispatch, token]);\n  return loading ? (\n    <Loading isLoading={loading} />\n  ) : (\n    <>\n      <ProfileHeader\n        viewMode={viewMode}\n        changeViewModeHandler={changeViewModeHandler}\n      />\n      {viewMode === \"edit\" ? editForm : viewForm}\n    </>\n  );\n}\n\nconst onSubmit = (values, dispatch, props) => {\n  let { token, updatedImageFile } = props;\n  if (updatedImageFile) values.profilePic = updatedImageFile;\n  return dispatch(\n    allActions.userProfileActions.editUserProfile(\n      \"/user/profile\",\n      values,\n      token\n    )\n  ).then((res) => {\n    if (res.error) {\n      let { errors } = res.error.response.data;\n      if (errors) {\n        throw new SubmissionError(errors);\n      }\n    }\n  });\n};\n\nconst mapStateToProps = (state, props) => {\n  let {\n    user,\n    updatedImageFile,\n    updatedImageFileURL,\n    errorMessage,\n    loading,\n    viewMode,\n    successMessage: deleteSuccess,\n  } = state.userProfile;\n\n  return {\n    initialValues: user,\n    updatedImageFile: updatedImageFile,\n    updatedImageFileURL: updatedImageFileURL,\n    token: state.userProfile.token,\n    errorMessage: errorMessage,\n    loading: loading,\n    viewMode: viewMode,\n    deleteSuccess: deleteSuccess,\n    deleteError: errorMessage,\n  };\n};\n\nexport default connect(mapStateToProps)(\n  reduxForm({\n    form: \"editProfile\",\n    enableReinitialize: true,\n    onSubmit,\n    validate,\n  })(EditProfileCon)\n);\n"]},"metadata":{},"sourceType":"module"}