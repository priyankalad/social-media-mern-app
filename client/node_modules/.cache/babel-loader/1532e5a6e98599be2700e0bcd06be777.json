{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/ForgotPassCon.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport allActions from \"../redux/allActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport validateForm from \"../formValidations/validations\";\nimport ForgotPassword from \"../components/ForgotPassword\";\nimport { Redirect } from \"react-router\";\n\nconst validate = values => {\n  return validateForm(values, \"forgotpassword\");\n};\n\nlet ForgotPassCon = props => {\n  _s();\n\n  const {\n    errorMessage,\n    username,\n    loading\n  } = useSelector(({\n    forgotPass: {\n      errorMessage,\n      username,\n      loading\n    }\n  }) => ({\n    errorMessage,\n    loading,\n    username\n  }));\n  let dispatch = useDispatch();\n  return username ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/resetpassword\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(ForgotPassword, {\n    reduxFormProps: props,\n    loading: loading,\n    errorMessage: errorMessage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ForgotPassCon, \"X0BniK3s7VgLef/wJcZE/Gt6dhs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ForgotPassCon;\n\nfunction onSubmit(values, dispatch) {\n  dispatch(allActions.forgotPassActions.forgotPassword(\"/forgot-password\", values));\n}\n\nexport default reduxForm({\n  form: \"forgotPasswordForm\",\n  onSubmit,\n  validate\n})(ForgotPassCon);\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassCon\");","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/ForgotPassCon.js"],"names":["React","useEffect","reduxForm","allActions","useSelector","useDispatch","validateForm","ForgotPassword","Redirect","validate","values","ForgotPassCon","props","errorMessage","username","loading","forgotPass","dispatch","onSubmit","forgotPassActions","forgotPassword","form"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAC3B,SAAOJ,YAAY,CAACI,MAAD,EAAS,gBAAT,CAAnB;AACD,CAFD;;AAIA,IAAIC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC7B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAsCX,WAAW,CACrD,CAAC;AAAEY,IAAAA,UAAU,EAAE;AAAEH,MAAAA,YAAF;AAAgBC,MAAAA,QAAhB;AAA0BC,MAAAA;AAA1B;AAAd,GAAD,MAA0D;AACxDF,IAAAA,YADwD;AAExDE,IAAAA,OAFwD;AAGxDD,IAAAA;AAHwD,GAA1D,CADqD,CAAvD;AAOA,MAAIG,QAAQ,GAAGZ,WAAW,EAA1B;AAGA,SAAOS,QAAQ,gBACb,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADa,gBAGb,QAAC,cAAD;AACE,IAAA,cAAc,EAAEF,KADlB;AAEE,IAAA,OAAO,EAAEG,OAFX;AAGE,IAAA,YAAY,EAAEF;AAHhB;AAAA;AAAA;AAAA;AAAA,UAHF;AASD,CApBD;;GAAIF,a;UAC0CP,W,EAO7BC,W;;;KARbM,a;;AAqBJ,SAASO,QAAT,CAAkBR,MAAlB,EAA0BO,QAA1B,EAAoC;AAClCA,EAAAA,QAAQ,CACNd,UAAU,CAACgB,iBAAX,CAA6BC,cAA7B,CAA4C,kBAA5C,EAAgEV,MAAhE,CADM,CAAR;AAGD;;AACD,eAAeR,SAAS,CAAC;AACvBmB,EAAAA,IAAI,EAAE,oBADiB;AAEvBH,EAAAA,QAFuB;AAGvBT,EAAAA;AAHuB,CAAD,CAAT,CAIZE,aAJY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport allActions from \"../redux/allActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport validateForm from \"../formValidations/validations\";\nimport ForgotPassword from \"../components/ForgotPassword\";\nimport { Redirect } from \"react-router\";\n\nconst validate = (values) => {\n  return validateForm(values, \"forgotpassword\");\n};\n\nlet ForgotPassCon = (props) => {\n  const { errorMessage, username, loading } = useSelector(\n    ({ forgotPass: { errorMessage, username, loading } }) => ({\n      errorMessage,\n      loading,\n      username,\n    })\n  );\n  let dispatch = useDispatch();\n  \n\n  return username ? (\n    <Redirect to=\"/resetpassword\" />\n  ) : (\n    <ForgotPassword\n      reduxFormProps={props}\n      loading={loading}\n      errorMessage={errorMessage}\n    />\n  );\n};\nfunction onSubmit(values, dispatch) {\n  dispatch(\n    allActions.forgotPassActions.forgotPassword(\"/forgot-password\", values)\n  );\n}\nexport default reduxForm({\n  form: \"forgotPasswordForm\",\n  onSubmit,\n  validate,\n})(ForgotPassCon);\n"]},"metadata":{},"sourceType":"module"}