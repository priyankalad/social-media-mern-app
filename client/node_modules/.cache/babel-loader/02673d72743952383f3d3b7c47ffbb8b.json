{"ast":null,"code":"const middlewareConfig = {\n  interceptors: {\n    request: [{\n      success: function ({\n        getState,\n        dispatch,\n        getSourceAction\n      }, req) {\n        // console.log(req); //contains information about request object\n        //...\n        return req;\n      },\n      error: function ({\n        getState,\n        dispatch,\n        getSourceAction\n      }, error) {\n        //...\n        //  console.log(error);\n        return error;\n      }\n    }],\n    response: [{\n      success: function ({\n        getState,\n        dispatch,\n        getSourceAction\n      }, res) {\n        // console.log(res); //contains information about request object\n        //...\n        return Promise.resolve(res);\n      },\n      error: function ({\n        getState,\n        dispatch,\n        getSourceAction\n      }, error) {\n        return Promise.reject(error);\n      }\n    }]\n  }\n};\nexport default middlewareConfig;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/middlewareConfig.js"],"names":["middlewareConfig","interceptors","request","success","getState","dispatch","getSourceAction","req","error","response","res","Promise","resolve","reject"],"mappings":"AAAA,MAAMA,gBAAgB,GAAG;AACvBC,EAAAA,YAAY,EAAE;AACZC,IAAAA,OAAO,EAAE,CACP;AACEC,MAAAA,OAAO,EAAE,UAAS;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,OAAT,EAAkDC,GAAlD,EAAuD;AAC9D;AACA;AACA,eAAOA,GAAP;AACD,OALH;AAMEC,MAAAA,KAAK,EAAE,UAAS;AAAEJ,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,OAAT,EAAkDE,KAAlD,EAAyD;AAC9D;AACA;AACA,eAAOA,KAAP;AACD;AAVH,KADO,CADG;AAeZC,IAAAA,QAAQ,EAAE,CACR;AACEN,MAAAA,OAAO,EAAE,UAAS;AAAEC,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,OAAT,EAAkDI,GAAlD,EAAuD;AAC9D;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,CAAgBF,GAAhB,CAAP;AACD,OALH;AAMEF,MAAAA,KAAK,EAAE,UAAS;AAAEJ,QAAAA,QAAF;AAAYC,QAAAA,QAAZ;AAAsBC,QAAAA;AAAtB,OAAT,EAAkDE,KAAlD,EAAyD;AAC9D,eAAOG,OAAO,CAACE,MAAR,CAAeL,KAAf,CAAP;AACD;AARH,KADQ;AAfE;AADS,CAAzB;AA+BA,eAAeR,gBAAf","sourcesContent":["const middlewareConfig = {\n  interceptors: {\n    request: [\n      {\n        success: function({ getState, dispatch, getSourceAction }, req) {\n          // console.log(req); //contains information about request object\n          //...\n          return req;\n        },\n        error: function({ getState, dispatch, getSourceAction }, error) {\n          //...\n          //  console.log(error);\n          return error;\n        }\n      }\n    ],\n    response: [\n      {\n        success: function({ getState, dispatch, getSourceAction }, res) {\n          // console.log(res); //contains information about request object\n          //...\n          return Promise.resolve(res);\n        },\n        error: function({ getState, dispatch, getSourceAction }, error) {\n          return Promise.reject(error);\n        }\n      }\n    ]\n  }\n};\n\nexport default middlewareConfig;\n"]},"metadata":{},"sourceType":"module"}