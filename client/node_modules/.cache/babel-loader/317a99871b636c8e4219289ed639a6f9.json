{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import allActions from\"../redux/allActions\";import MyFollowers from\"../components/MyFollowers\";export default function MyFollowersCon(props){var _useSelector=useSelector(function(_ref){var _ref$followUnfollow=_ref.followUnfollow,centralLoading=_ref$followUnfollow.centralLoading,followers=_ref$followUnfollow.followers,followingUsers=_ref$followUnfollow.followingUsers,token=_ref.userProfile.token;return{centralLoading:centralLoading,followers:followers,token:token,followingUsers:followingUsers};}),centralLoading=_useSelector.centralLoading,followers=_useSelector.followers,token=_useSelector.token,followingUsers=_useSelector.followingUsers;var dispatch=useDispatch();useEffect(function(){dispatch(allActions.followUnfollowActions.getMyFollowers(\"/user/followers\",token));},[dispatch,token]);attachFollowFlag(followers,followingUsers);return/*#__PURE__*/_jsx(MyFollowers,{loading:centralLoading,users:followers,token:token,dispatch:dispatch});}var attachFollowFlag=function attachFollowFlag(followers,following){var hashSet=new Set();following.forEach(function(u){return hashSet.add(u._id);});followers.forEach(function(u){u.isFollowing=hashSet.has(u._id)?true:false;});};","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyFollowersCon.js"],"names":["React","useEffect","useDispatch","useSelector","allActions","MyFollowers","MyFollowersCon","props","followUnfollow","centralLoading","followers","followingUsers","token","userProfile","dispatch","followUnfollowActions","getMyFollowers","attachFollowFlag","following","hashSet","Set","forEach","u","add","_id","isFollowing","has"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,WAAP,KAAwB,2BAAxB,CACA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,kBACeJ,WAAW,CACpE,4CACEK,cADF,CACoBC,cADpB,qBACoBA,cADpB,CACoCC,SADpC,qBACoCA,SADpC,CAC+CC,cAD/C,qBAC+CA,cAD/C,CAEiBC,KAFjB,MAEEC,WAFF,CAEiBD,KAFjB,OAGO,CACLH,cAAc,CAAdA,cADK,CAELC,SAAS,CAATA,SAFK,CAGLE,KAAK,CAALA,KAHK,CAILD,cAAc,CAAdA,cAJK,CAHP,EADoE,CAD1B,CACtCF,cADsC,cACtCA,cADsC,CACtBC,SADsB,cACtBA,SADsB,CACXE,KADW,cACXA,KADW,CACJD,cADI,cACJA,cADI,CAa5C,GAAIG,CAAAA,QAAQ,CAAGZ,WAAW,EAA1B,CAEAD,SAAS,CAAC,UAAM,CACda,QAAQ,CACNV,UAAU,CAACW,qBAAX,CAAiCC,cAAjC,CAAgD,iBAAhD,CAAmEJ,KAAnE,CADM,CAAR,CAGD,CAJQ,CAIN,CAACE,QAAD,CAAWF,KAAX,CAJM,CAAT,CAMAK,gBAAgB,CAACP,SAAD,CAAYC,cAAZ,CAAhB,CAEA,mBACE,KAAC,WAAD,EACE,OAAO,CAAEF,cADX,CAEE,KAAK,CAAEC,SAFT,CAGE,KAAK,CAAEE,KAHT,CAIE,QAAQ,CAAEE,QAJZ,EADF,CAQD,CAED,GAAIG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACP,SAAD,CAAYQ,SAAZ,CAA0B,CAC/C,GAAIC,CAAAA,OAAO,CAAG,GAAIC,CAAAA,GAAJ,EAAd,CACAF,SAAS,CAACG,OAAV,CAAkB,SAAAC,CAAC,QAAIH,CAAAA,OAAO,CAACI,GAAR,CAAYD,CAAC,CAACE,GAAd,CAAJ,EAAnB,EAEAd,SAAS,CAACW,OAAV,CAAkB,SAAAC,CAAC,CAAI,CACrBA,CAAC,CAACG,WAAF,CAAgBN,OAAO,CAACO,GAAR,CAAYJ,CAAC,CAACE,GAAd,EAAqB,IAArB,CAA4B,KAA5C,CACD,CAFD,EAGD,CAPD","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport MyFollowers from \"../components/MyFollowers\";\nexport default function MyFollowersCon(props) {\n  let { centralLoading, followers, token, followingUsers } = useSelector(\n    ({\n      followUnfollow: { centralLoading, followers, followingUsers },\n      userProfile: { token }\n    }) => ({\n      centralLoading,\n      followers,\n      token,\n      followingUsers\n    })\n  );\n\n  let dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      allActions.followUnfollowActions.getMyFollowers(\"/user/followers\", token)\n    );\n  }, [dispatch, token]);\n\n  attachFollowFlag(followers, followingUsers);\n\n  return (\n    <MyFollowers\n      loading={centralLoading}\n      users={followers}\n      token={token}\n      dispatch={dispatch}\n    />\n  );\n}\n\nlet attachFollowFlag = (followers, following) => {\n  let hashSet = new Set();\n  following.forEach(u => hashSet.add(u._id));\n\n  followers.forEach(u => {\n    u.isFollowing = hashSet.has(u._id) ? true : false;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}