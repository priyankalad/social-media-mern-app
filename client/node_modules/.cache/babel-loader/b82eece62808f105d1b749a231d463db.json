{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";import{reduxForm}from\"redux-form\";import allActions from\"../redux/allActions\";import{useSelector,useDispatch}from\"react-redux\";import validateForm from\"../formValidations/validations\";import ForgotPassword from\"../components/ForgotPassword\";import{Redirect}from\"react-router\";var validate=function validate(values){return validateForm(values,\"forgotpassword\");};var ForgotPassCon=function ForgotPassCon(props){var _useSelector=useSelector(function(_ref){var _ref$forgotPass=_ref.forgotPass,errorMessage=_ref$forgotPass.errorMessage,username=_ref$forgotPass.username,loading=_ref$forgotPass.loading;return{errorMessage:errorMessage,loading:loading,username:username};}),errorMessage=_useSelector.errorMessage,username=_useSelector.username,loading=_useSelector.loading;var dispatch=useDispatch();return username?/*#__PURE__*/_jsx(Redirect,{to:\"/resetpassword\"}):/*#__PURE__*/_jsx(ForgotPassword,{reduxFormProps:props,loading:loading,errorMessage:errorMessage});};function onSubmit(values,dispatch){dispatch(allActions.forgotPassActions.forgotPassword(\"/forgot-password\",values));}export default reduxForm({form:\"forgotPasswordForm\",onSubmit:onSubmit,validate:validate})(ForgotPassCon);","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/ForgotPassCon.js"],"names":["React","useEffect","reduxForm","allActions","useSelector","useDispatch","validateForm","ForgotPassword","Redirect","validate","values","ForgotPassCon","props","forgotPass","errorMessage","username","loading","dispatch","onSubmit","forgotPassActions","forgotPassword","form"],"mappings":"2CAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,SAAT,KAA0B,YAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,YAAP,KAAyB,gCAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,8BAA3B,CACA,OAASC,QAAT,KAAyB,cAAzB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,MAAD,CAAY,CAC3B,MAAOJ,CAAAA,YAAY,CAACI,MAAD,CAAS,gBAAT,CAAnB,CACD,CAFD,CAIA,GAAIC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,KAAD,CAAW,kBACeR,WAAW,CACrD,wCAAGS,UAAH,CAAiBC,YAAjB,iBAAiBA,YAAjB,CAA+BC,QAA/B,iBAA+BA,QAA/B,CAAyCC,OAAzC,iBAAyCA,OAAzC,OAA0D,CACxDF,YAAY,CAAZA,YADwD,CAExDE,OAAO,CAAPA,OAFwD,CAGxDD,QAAQ,CAARA,QAHwD,CAA1D,EADqD,CAD1B,CACrBD,YADqB,cACrBA,YADqB,CACPC,QADO,cACPA,QADO,CACGC,OADH,cACGA,OADH,CAQ7B,GAAIC,CAAAA,QAAQ,CAAGZ,WAAW,EAA1B,CAGA,MAAOU,CAAAA,QAAQ,cACb,KAAC,QAAD,EAAU,EAAE,CAAC,gBAAb,EADa,cAGb,KAAC,cAAD,EACE,cAAc,CAAEH,KADlB,CAEE,OAAO,CAAEI,OAFX,CAGE,YAAY,CAAEF,YAHhB,EAHF,CASD,CApBD,CAqBA,QAASI,CAAAA,QAAT,CAAkBR,MAAlB,CAA0BO,QAA1B,CAAoC,CAClCA,QAAQ,CACNd,UAAU,CAACgB,iBAAX,CAA6BC,cAA7B,CAA4C,kBAA5C,CAAgEV,MAAhE,CADM,CAAR,CAGD,CACD,cAAeR,CAAAA,SAAS,CAAC,CACvBmB,IAAI,CAAE,oBADiB,CAEvBH,QAAQ,CAARA,QAFuB,CAGvBT,QAAQ,CAARA,QAHuB,CAAD,CAAT,CAIZE,aAJY,CAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport allActions from \"../redux/allActions\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport validateForm from \"../formValidations/validations\";\nimport ForgotPassword from \"../components/ForgotPassword\";\nimport { Redirect } from \"react-router\";\n\nconst validate = (values) => {\n  return validateForm(values, \"forgotpassword\");\n};\n\nlet ForgotPassCon = (props) => {\n  const { errorMessage, username, loading } = useSelector(\n    ({ forgotPass: { errorMessage, username, loading } }) => ({\n      errorMessage,\n      loading,\n      username,\n    })\n  );\n  let dispatch = useDispatch();\n  \n\n  return username ? (\n    <Redirect to=\"/resetpassword\" />\n  ) : (\n    <ForgotPassword\n      reduxFormProps={props}\n      loading={loading}\n      errorMessage={errorMessage}\n    />\n  );\n};\nfunction onSubmit(values, dispatch) {\n  dispatch(\n    allActions.forgotPassActions.forgotPassword(\"/forgot-password\", values)\n  );\n}\nexport default reduxForm({\n  form: \"forgotPasswordForm\",\n  onSubmit,\n  validate,\n})(ForgotPassCon);\n"]},"metadata":{},"sourceType":"module"}