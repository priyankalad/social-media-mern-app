{"ast":null,"code":"import _toConsumableArray from\"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{CREATE_POST_REQUEST,CREATE_POST_SUCCESS,SET_IMAGE,REMOVE_IMAGE,ALL_POSTS_SUCCESS,ALL_POSTS_REQUEST,LIKE_POST_SUCCESS,ALL_POSTS_FAILURE,LIKE_POST_REQUEST,LIKE_POST_FAILURE,DELETE_POST_REQUEST,DELETE_POST_SUCCESS,DELETE_POST_FAILURE,CREATE_COMMENT_REQUEST,CREATE_COMMENT_SUCCESS,CREATE_COMMENT_FAILURE}from\"./postActionTypes\";var initialState={loading:false,smallLoading:false,successMessage:\"\",errorMessage:\"\",image:null,imageUrl:\"\",posts:[],likedCount:0,postId:\"\"};var postReducer=function postReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var type=action.type,payload=action.payload,error=action.error;switch(type){case CREATE_POST_REQUEST:case ALL_POSTS_REQUEST:case CREATE_COMMENT_REQUEST:return _objectSpread(_objectSpread({},state),{},{loading:true});case CREATE_POST_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,image:null,imageURL:\"\"});case SET_IMAGE:var imageURL=URL.createObjectURL(payload);return _objectSpread(_objectSpread({},state),{},{image:payload,imageUrl:imageURL});case REMOVE_IMAGE:return _objectSpread(_objectSpread({},state),{},{image:null,imageUrl:\"\"});case ALL_POSTS_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,posts:payload.data.posts});case ALL_POSTS_FAILURE:return _objectSpread(_objectSpread({},state),{},{loading:false,errorMessage:error.response.data.error});case LIKE_POST_SUCCESS:var _payload$data=payload.data,post=_payload$data.post,likedPost=_payload$data.likedPost;return _objectSpread(_objectSpread({},state),{},{//  smallLoading: false,\nposts:updatedPostsAfterToggle(_toConsumableArray(state.posts),post),likedCount:likedPost,postId:\"\"});case LIKE_POST_FAILURE:return _objectSpread(_objectSpread({},state),{},{likedSuccess:\"\",smallLoading:false,errorMessage:error.data,postId:\"\"});case DELETE_POST_REQUEST:case LIKE_POST_REQUEST:return _objectSpread(_objectSpread({},state),{},{smallLoading:true,postId:payload.request.data.postId});case DELETE_POST_SUCCESS:var deletedPostId=payload.data.deletedPostId;return _objectSpread(_objectSpread({},state),{},{smallLoading:false,posts:_toConsumableArray(state.posts).filter(function(p){return p._id!==deletedPostId;}),postId:\"\"});case DELETE_POST_FAILURE:return _objectSpread(_objectSpread({},state),{},{smallLoading:false,errorMessage:error.response.data.message,postId:\"\"});case CREATE_COMMENT_SUCCESS:return _objectSpread(_objectSpread({},state),{},{loading:false,posts:updatePostsAfterComment(_toConsumableArray(state.posts),payload.data.post)});case CREATE_COMMENT_FAILURE:return _objectSpread(_objectSpread({},state),{},{loading:false,errorMessage:error.response.data.message});default:return state;}};var updatePostsAfterComment=function updatePostsAfterComment(posts,post){var postIndex=posts.findIndex(function(p){return p._id===post._id;});posts[postIndex]=post;return posts;};var updatedPostsAfterToggle=function updatedPostsAfterToggle(posts,post){posts.some(function(p){if(p._id===post._id){p.liked=post.liked;p.likedByUsers=post.likedByUsers;return true;}return false;});return posts;};export default postReducer;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/post/postReducer.js"],"names":["CREATE_POST_REQUEST","CREATE_POST_SUCCESS","SET_IMAGE","REMOVE_IMAGE","ALL_POSTS_SUCCESS","ALL_POSTS_REQUEST","LIKE_POST_SUCCESS","ALL_POSTS_FAILURE","LIKE_POST_REQUEST","LIKE_POST_FAILURE","DELETE_POST_REQUEST","DELETE_POST_SUCCESS","DELETE_POST_FAILURE","CREATE_COMMENT_REQUEST","CREATE_COMMENT_SUCCESS","CREATE_COMMENT_FAILURE","initialState","loading","smallLoading","successMessage","errorMessage","image","imageUrl","posts","likedCount","postId","postReducer","state","action","type","payload","error","imageURL","URL","createObjectURL","data","response","post","likedPost","updatedPostsAfterToggle","likedSuccess","request","deletedPostId","filter","p","_id","message","updatePostsAfterComment","postIndex","findIndex","some","liked","likedByUsers"],"mappings":"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","sourcesContent":["import {\n  CREATE_POST_REQUEST,\n  CREATE_POST_SUCCESS,\n  SET_IMAGE,\n  REMOVE_IMAGE,\n  ALL_POSTS_SUCCESS,\n  ALL_POSTS_REQUEST,\n  LIKE_POST_SUCCESS,\n  ALL_POSTS_FAILURE,\n  LIKE_POST_REQUEST,\n  LIKE_POST_FAILURE,\n  DELETE_POST_REQUEST,\n  DELETE_POST_SUCCESS,\n  DELETE_POST_FAILURE,\n  CREATE_COMMENT_REQUEST,\n  CREATE_COMMENT_SUCCESS,\n  CREATE_COMMENT_FAILURE\n} from \"./postActionTypes\";\n\nconst initialState = {\n  loading: false,\n  smallLoading: false,\n  successMessage: \"\",\n  errorMessage: \"\",\n  image: null,\n  imageUrl: \"\",\n  posts: [],\n  likedCount: 0,\n  postId: \"\"\n};\n\nconst postReducer = (state = initialState, action) => {\n  let { type, payload, error } = action;\n  switch (type) {\n    case CREATE_POST_REQUEST:\n    case ALL_POSTS_REQUEST:\n    case CREATE_COMMENT_REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case CREATE_POST_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        image: null,\n        imageURL: \"\"\n      };\n    case SET_IMAGE:\n      let imageURL = URL.createObjectURL(payload);\n      return {\n        ...state,\n        image: payload,\n        imageUrl: imageURL\n      };\n    case REMOVE_IMAGE:\n      return {\n        ...state,\n        image: null,\n        imageUrl: \"\"\n      };\n    case ALL_POSTS_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        posts: payload.data.posts\n      };\n    case ALL_POSTS_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: error.response.data.error\n      };\n    case LIKE_POST_SUCCESS:\n      let { post, likedPost } = payload.data;\n      return {\n        ...state,\n        //  smallLoading: false,\n        posts: updatedPostsAfterToggle([...state.posts], post),\n        likedCount: likedPost,\n        postId: \"\"\n      };\n    case LIKE_POST_FAILURE:\n      return {\n        ...state,\n        likedSuccess: \"\",\n        smallLoading: false,\n        errorMessage: error.data,\n        postId: \"\"\n      };\n    case DELETE_POST_REQUEST:\n    case LIKE_POST_REQUEST:\n      return {\n        ...state,\n        smallLoading: true,\n        postId: payload.request.data.postId\n      };\n    case DELETE_POST_SUCCESS:\n      let { deletedPostId } = payload.data;\n      return {\n        ...state,\n        smallLoading: false,\n        posts: [...state.posts].filter(p => p._id !== deletedPostId),\n        postId: \"\"\n      };\n    case DELETE_POST_FAILURE:\n      return {\n        ...state,\n        smallLoading: false,\n        errorMessage: error.response.data.message,\n        postId: \"\"\n      };\n    case CREATE_COMMENT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        posts: updatePostsAfterComment([...state.posts], payload.data.post)\n      };\n    case CREATE_COMMENT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: error.response.data.message\n      };\n    default:\n      return state;\n  }\n};\n\nlet updatePostsAfterComment = (posts, post) => {\n  let postIndex = posts.findIndex(p => p._id === post._id);\n  posts[postIndex] = post;\n  return posts;\n};\n\nlet updatedPostsAfterToggle = (posts, post) => {\n  posts.some(p => {\n    if (p._id === post._id) {\n      p.liked = post.liked;\n      p.likedByUsers = post.likedByUsers;\n      return true;\n    }\n    return false;\n  });\n  return posts;\n};\n\nexport default postReducer;\n"]},"metadata":{},"sourceType":"module"}