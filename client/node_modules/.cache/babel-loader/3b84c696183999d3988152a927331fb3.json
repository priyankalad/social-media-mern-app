{"ast":null,"code":"import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import allActions from\"../redux/allActions\";import Post from\"../components/Post\";import Loading from\"../components/Loading\";var MyLikedPostsCon=function MyLikedPostsCon(props){console.log(\"My liked post page\");var dispatch=useDispatch();var _useSelector=useSelector(function(_ref){var token=_ref.userProfile.token,_ref$post=_ref.post,posts=_ref$post.posts,postId=_ref$post.postId,loading=_ref$post.loading,smallLoading=_ref$post.smallLoading;return{token:token,posts:posts,postId:postId,smallLoading:smallLoading,loading:loading};}),token=_useSelector.token,posts=_useSelector.posts,postId=_useSelector.postId,loading=_useSelector.loading,smallLoading=_useSelector.smallLoading;useEffect(function(){dispatch(allActions.postActions.getAllPosts(\"/user/post\",token));},[dispatch,token]);var likedPosts=posts.filter(function(p){return p.liked;});var content=/*#__PURE__*/_jsx(_Fragment,{children:likedPosts&&likedPosts.length>0?likedPosts.map(function(post){post.liked=true;return/*#__PURE__*/_jsx(Post,{post:post,postId:postId,smallLoading:smallLoading},post._id);}):/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-4\",children:/*#__PURE__*/_jsx(\"p\",{style:{color:\"dimgrey\"},children:\"You have not liked any post yet\"})})});return loading?/*#__PURE__*/_jsx(Loading,{isLoading:loading}):content;};export default MyLikedPostsCon;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyLikedPostsCon.js"],"names":["React","useEffect","useDispatch","useSelector","allActions","Post","Loading","MyLikedPostsCon","props","console","log","dispatch","token","userProfile","post","posts","postId","loading","smallLoading","postActions","getAllPosts","likedPosts","filter","p","liked","content","length","map","_id","color"],"mappings":"gGAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,qBAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,MAAOC,CAAAA,OAAP,KAAoB,uBAApB,CAEA,GAAIC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/BC,OAAO,CAACC,GAAR,CAAY,oBAAZ,EACA,GAAMC,CAAAA,QAAQ,CAAGT,WAAW,EAA5B,CAF+B,iBAGyBC,WAAW,CACjE,kBACiBS,CAAAA,KADjB,MACEC,WADF,CACiBD,KADjB,gBAEEE,IAFF,CAEUC,KAFV,WAEUA,KAFV,CAEiBC,MAFjB,WAEiBA,MAFjB,CAEyBC,OAFzB,WAEyBA,OAFzB,CAEkCC,YAFlC,WAEkCA,YAFlC,OAGO,CACLN,KAAK,CAALA,KADK,CAELG,KAAK,CAALA,KAFK,CAGLC,MAAM,CAANA,MAHK,CAILE,YAAY,CAAZA,YAJK,CAKLD,OAAO,CAAPA,OALK,CAHP,EADiE,CAHpC,CAGvBL,KAHuB,cAGvBA,KAHuB,CAGhBG,KAHgB,cAGhBA,KAHgB,CAGTC,MAHS,cAGTA,MAHS,CAGDC,OAHC,cAGDA,OAHC,CAGQC,YAHR,cAGQA,YAHR,CAgB/BjB,SAAS,CAAC,UAAM,CACdU,QAAQ,CAACP,UAAU,CAACe,WAAX,CAAuBC,WAAvB,CAAmC,YAAnC,CAAiDR,KAAjD,CAAD,CAAR,CACD,CAFQ,CAEN,CAACD,QAAD,CAAWC,KAAX,CAFM,CAAT,CAGA,GAAIS,CAAAA,UAAU,CAAGN,KAAK,CAACO,MAAN,CAAa,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,KAAT,EAAb,CAAjB,CACA,GAAIC,CAAAA,OAAO,cACT,yBACGJ,UAAU,EAAIA,UAAU,CAACK,MAAX,CAAoB,CAAlC,CACCL,UAAU,CAACM,GAAX,CAAe,SAACb,IAAD,CAAU,CACvBA,IAAI,CAACU,KAAL,CAAa,IAAb,CACA,mBACE,KAAC,IAAD,EAEE,IAAI,CAAEV,IAFR,CAGE,MAAM,CAAEE,MAHV,CAIE,YAAY,CAAEE,YAJhB,EACOJ,IAAI,CAACc,GADZ,CADF,CAQD,CAVD,CADD,cAaC,YAAK,SAAS,CAAC,kBAAf,uBACE,UAAG,KAAK,CAAE,CAAEC,KAAK,CAAE,SAAT,CAAV,6CADF,EAdJ,EADF,CAqBA,MAAOZ,CAAAA,OAAO,cAAG,KAAC,OAAD,EAAS,SAAS,CAAEA,OAApB,EAAH,CAAqCQ,OAAnD,CACD,CA1CD,CA4CA,cAAelB,CAAAA,eAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport Post from \"../components/Post\";\nimport Loading from \"../components/Loading\";\n\nlet MyLikedPostsCon = (props) => {\n  console.log(\"My liked post page\");\n  const dispatch = useDispatch();\n  const { token, posts, postId, loading, smallLoading } = useSelector(\n    ({\n      userProfile: { token },\n      post: { posts, postId, loading, smallLoading },\n    }) => ({\n      token,\n      posts,\n      postId,\n      smallLoading,\n      loading,\n    })\n  );\n\n  useEffect(() => {\n    dispatch(allActions.postActions.getAllPosts(\"/user/post\", token));\n  }, [dispatch, token]);\n  let likedPosts = posts.filter((p) => p.liked);\n  let content = (\n    <>\n      {likedPosts && likedPosts.length > 0 ? (\n        likedPosts.map((post) => {\n          post.liked = true;\n          return (\n            <Post\n              key={post._id}\n              post={post}\n              postId={postId}\n              smallLoading={smallLoading}\n            />\n          );\n        })\n      ) : (\n        <div className=\"text-center mt-4\">\n          <p style={{ color: \"dimgrey\" }}>You have not liked any post yet</p>\n        </div>\n      )}\n    </>\n  );\n  return loading ? <Loading isLoading={loading} /> : content;\n};\n\nexport default MyLikedPostsCon;\n"]},"metadata":{},"sourceType":"module"}