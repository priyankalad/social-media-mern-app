{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyAllUnfollowingUsersCon.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport { useEffect } from \"react\";\nimport AllUnfollowingUsers from \"../components/AllUnfollowingUsers\";\nexport default function MyAllUnfollowingUsersCon() {\n  _s();\n\n  let dispatch = useDispatch();\n  let {\n    token,\n    isLoggedIn,\n    centralLoading,\n    unfollowingUsers\n  } = useSelector(({\n    userProfile: {\n      token,\n      isLoggedIn\n    },\n    followUnfollow: {\n      centralLoading,\n      unfollowingUsers\n    }\n  }) => ({\n    token,\n    isLoggedIn,\n    centralLoading,\n    unfollowingUsers\n  }));\n\n  let getUnfollowingUsers = () => {\n    dispatch(allActions.followUnfollowActions.getUnfollowingUsers(\"/user/unfollowing/all\", token));\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      getUnfollowingUsers();\n    }\n  }, [isLoggedIn, dispatch, token]);\n  return isLoggedIn && unfollowingUsers && unfollowingUsers.length > 0 ? /*#__PURE__*/_jsxDEV(AllUnfollowingUsers, {\n    loading: centralLoading,\n    users: unfollowingUsers,\n    token: token,\n    dispatch: dispatch\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) : \"\";\n}\n\n_s(MyAllUnfollowingUsersCon, \"pZ7w3/Fhp9Dz07wQbVgBiev2Ycg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MyAllUnfollowingUsersCon;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyAllUnfollowingUsersCon\");","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/containers/MyAllUnfollowingUsersCon.js"],"names":["React","useSelector","useDispatch","allActions","useEffect","AllUnfollowingUsers","MyAllUnfollowingUsersCon","dispatch","token","isLoggedIn","centralLoading","unfollowingUsers","userProfile","followUnfollow","getUnfollowingUsers","followUnfollowActions","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AAEA,eAAe,SAASC,wBAAT,GAAoC;AAAA;;AACjD,MAAIC,QAAQ,GAAGL,WAAW,EAA1B;AACA,MAAI;AAAEM,IAAAA,KAAF;AAASC,IAAAA,UAAT;AAAqBC,IAAAA,cAArB;AAAqCC,IAAAA;AAArC,MAA0DV,WAAW,CACvE,CAAC;AACCW,IAAAA,WAAW,EAAE;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KADd;AAECI,IAAAA,cAAc,EAAE;AAAEH,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB;AAFjB,GAAD,MAGO;AACLH,IAAAA,KADK;AAELC,IAAAA,UAFK;AAGLC,IAAAA,cAHK;AAILC,IAAAA;AAJK,GAHP,CADuE,CAAzE;;AAYA,MAAIG,mBAAmB,GAAG,MAAM;AAC9BP,IAAAA,QAAQ,CACNJ,UAAU,CAACY,qBAAX,CAAiCD,mBAAjC,CACE,uBADF,EAEEN,KAFF,CADM,CAAR;AAMD,GAPD;;AASAJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,UAAJ,EAAgB;AACdK,MAAAA,mBAAmB;AACpB;AACF,GAJQ,EAIN,CAACL,UAAD,EAAaF,QAAb,EAAuBC,KAAvB,CAJM,CAAT;AAMA,SAAOC,UAAU,IAAIE,gBAAd,IAAkCA,gBAAgB,CAACK,MAAjB,GAA0B,CAA5D,gBACL,QAAC,mBAAD;AACE,IAAA,OAAO,EAAEN,cADX;AAEE,IAAA,KAAK,EAAEC,gBAFT;AAGE,IAAA,KAAK,EAAEH,KAHT;AAIE,IAAA,QAAQ,EAAED;AAJZ;AAAA;AAAA;AAAA;AAAA,UADK,GAQL,EARF;AAUD;;GAvCuBD,wB;UACPJ,W,EAC+CD,W;;;KAFxCK,wB","sourcesContent":["import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport allActions from \"../redux/allActions\";\nimport { useEffect } from \"react\";\nimport AllUnfollowingUsers from \"../components/AllUnfollowingUsers\";\n\nexport default function MyAllUnfollowingUsersCon() {\n  let dispatch = useDispatch();\n  let { token, isLoggedIn, centralLoading, unfollowingUsers } = useSelector(\n    ({\n      userProfile: { token, isLoggedIn },\n      followUnfollow: { centralLoading, unfollowingUsers }\n    }) => ({\n      token,\n      isLoggedIn,\n      centralLoading,\n      unfollowingUsers\n    })\n  );\n\n  let getUnfollowingUsers = () => {\n    dispatch(\n      allActions.followUnfollowActions.getUnfollowingUsers(\n        \"/user/unfollowing/all\",\n        token\n      )\n    );\n  };\n\n  useEffect(() => {\n    if (isLoggedIn) {\n      getUnfollowingUsers();\n    }\n  }, [isLoggedIn, dispatch, token]);\n\n  return isLoggedIn && unfollowingUsers && unfollowingUsers.length > 0 ? (\n    <AllUnfollowingUsers\n      loading={centralLoading}\n      users={unfollowingUsers}\n      token={token}\n      dispatch={dispatch}\n    />\n  ) : (\n    \"\"\n  );\n}\n"]},"metadata":{},"sourceType":"module"}