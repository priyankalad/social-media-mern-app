{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/components/renderFields.js\";\nimport React from \"react\";\n\nlet renderInput = ({\n  input,\n  type,\n  label,\n  style,\n  extraCssClass,\n  meta: {\n    error,\n    warning,\n    touched\n  }\n}) => {\n  if (Array.isArray(error) && error.length > 1) {\n    error = error.reduce((result, item) => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [result, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), item]\n    }, void 0, true));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `form-group ${extraCssClass}`,\n    children: [input.name !== \"name\" ? /*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 32\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: label,\n      ...input,\n      style: style,\n      type: type,\n      className: \"form-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-warning\",\n      children: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\nlet renderRadioInput = ({\n  input,\n  options,\n  label,\n  value,\n  meta: {\n    error,\n    touched\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), Object.keys(options).map(key => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-check\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", { ...input,\n          checked: input.value === key ? true : false,\n          className: \"form-check-input\",\n          type: \"radio\",\n          id: key,\n          value: key\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-check-label\",\n          htmlFor: key,\n          children: options[key].label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this);\n    }), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nlet renderSelect = ({\n  input,\n  label,\n  children,\n  meta: {\n    error,\n    touched\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"label\",\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"form-control\",\n      ...input,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), touched && error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\nlet renderTextArea = ({\n  input,\n  label,\n  rows,\n  cols,\n  style,\n  meta: {\n    error,\n    warning,\n    touched\n  }\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-group\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n      style: style,\n      rows: rows,\n      cols: cols,\n      className: \"form-control\",\n      placeholder: \"What's happening\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), touched && (error && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 20\n    }, this) || warning && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-warning\",\n      children: warning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 23\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\nexport default {\n  renderInput,\n  renderRadioInput,\n  renderSelect,\n  renderTextArea\n};","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/components/renderFields.js"],"names":["React","renderInput","input","type","label","style","extraCssClass","meta","error","warning","touched","Array","isArray","length","reduce","result","item","name","renderRadioInput","options","value","Object","keys","map","key","renderSelect","children","renderTextArea","rows","cols"],"mappings":"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","sourcesContent":["import React from \"react\";\nlet renderInput = ({\n  input,\n  type,\n  label,\n  style,\n  extraCssClass,\n  meta: { error, warning, touched },\n}) => {\n  if (Array.isArray(error) && error.length > 1) {\n    error = error.reduce((result, item) => (\n      <>\n        {result}\n        <br></br>\n        {item}\n      </>\n    ));\n  }\n  return (\n    <div className={`form-group ${extraCssClass}`}>\n      {input.name !== \"name\" ? <label>{label}</label> : \"\"}\n      <input\n        placeholder={label}\n        {...input}\n        style={style}\n        type={type}\n        className=\"form-control\"\n      />\n      {touched &&\n        ((error && <span className=\"text-danger\">{error}</span>) ||\n          (warning && <span className=\"text-warning\">{warning}</span>))}\n    </div>\n  );\n};\n\nlet renderRadioInput = ({\n  input,\n  options,\n  label,\n  value,\n  meta: { error, touched },\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"label\">{label}</label>\n\n      {Object.keys(options).map((key) => {\n        return (\n          <div className=\"form-check\" key={key}>\n            <input\n              {...input}\n              checked={input.value === key ? true : false}\n              className=\"form-check-input\"\n              type=\"radio\"\n              id={key}\n              value={key}\n            />\n            <label className=\"form-check-label\" htmlFor={key}>\n              {options[key].label}\n            </label>\n          </div>\n        );\n      })}\n      {touched && error && <span className=\"text-danger\">{error}</span>}\n    </div>\n  );\n};\n\nlet renderSelect = ({ input, label, children, meta: { error, touched } }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"label\">{label}</label>\n      <select className=\"form-control\" {...input}>\n        {children}\n      </select>\n      {touched && error && <span className=\"text-danger\">{error}</span>}\n    </div>\n  );\n};\n\nlet renderTextArea = ({\n  input,\n  label,\n  rows,\n  cols,\n  style,\n  meta: { error, warning, touched },\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label>{label}</label>\n      <textarea\n        {...input}\n        style={style}\n        rows={rows}\n        cols={cols}\n        className=\"form-control\"\n        placeholder=\"What's happening\"\n      />\n      {touched &&\n        ((error && <span className=\"text-danger\">{error}</span>) ||\n          (warning && <span className=\"text-warning\">{warning}</span>))}\n    </div>\n  );\n};\n\nexport default { renderInput, renderRadioInput, renderSelect, renderTextArea };\n"]},"metadata":{},"sourceType":"module"}