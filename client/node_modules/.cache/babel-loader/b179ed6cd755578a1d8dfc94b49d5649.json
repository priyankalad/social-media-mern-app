{"ast":null,"code":"import { REQUEST, SUCCESS, FAILURE } from \"./registerActions\";\nconst initialState = {\n  loading: false,\n  successMessage: \"\",\n  errorMessage: \"\",\n  errorObj: null\n};\n\nconst registerReducer = (state = initialState, action) => {\n  let {\n    type,\n    payload,\n    error\n  } = action;\n\n  switch (type) {\n    case REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case SUCCESS:\n      return {\n        loading: false,\n        successMessage: payload.data.message,\n        errorMessage: \"\"\n      };\n\n    case FAILURE:\n      let {\n        message,\n        errors\n      } = error.response.data;\n      return {\n        loading: false,\n        successMessage: \"\",\n        errorMessage: message,\n        errorObj: errors\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default registerReducer;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/register/registerReducer.js"],"names":["REQUEST","SUCCESS","FAILURE","initialState","loading","successMessage","errorMessage","errorObj","registerReducer","state","action","type","payload","error","data","message","errors","response"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,OAAlB,EAA2BC,OAA3B,QAA0C,mBAA1C;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,cAAc,EAAE,EAFG;AAGnBC,EAAAA,YAAY,EAAE,EAHK;AAInBC,EAAAA,QAAQ,EAAE;AAJS,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACxD,MAAI;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BH,MAA/B;;AACA,UAAQC,IAAR;AACE,SAAKX,OAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAIF,SAAKH,OAAL;AACE,aAAO;AACLG,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,cAAc,EAAEO,OAAO,CAACE,IAAR,CAAaC,OAFxB;AAGLT,QAAAA,YAAY,EAAE;AAHT,OAAP;;AAKF,SAAKJ,OAAL;AACE,UAAI;AAAEa,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAsBH,KAAK,CAACI,QAAN,CAAeH,IAAzC;AACA,aAAO;AACLV,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,cAAc,EAAE,EAFX;AAGLC,QAAAA,YAAY,EAAES,OAHT;AAILR,QAAAA,QAAQ,EAAES;AAJL,OAAP;;AAMF;AACE,aAAOP,KAAP;AArBJ;AAuBD,CAzBD;;AA2BA,eAAeD,eAAf","sourcesContent":["import { REQUEST, SUCCESS, FAILURE } from \"./registerActions\";\n\nconst initialState = {\n  loading: false,\n  successMessage: \"\",\n  errorMessage: \"\",\n  errorObj: null\n};\n\nconst registerReducer = (state = initialState, action) => {\n  let { type, payload, error } = action;\n  switch (type) {\n    case REQUEST:\n      return {\n        ...state,\n        loading: true\n      };\n    case SUCCESS:\n      return {\n        loading: false,\n        successMessage: payload.data.message,\n        errorMessage: \"\"\n      };\n    case FAILURE:\n      let { message, errors } = error.response.data;\n      return {\n        loading: false,\n        successMessage: \"\",\n        errorMessage: message,\n        errorObj: errors\n      };\n    default:\n      return state;\n  }\n};\n\nexport default registerReducer;\n"]},"metadata":{},"sourceType":"module"}