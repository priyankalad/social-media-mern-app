{"ast":null,"code":"import { EDIT_REQUEST, EDIT_SUCCESS, EDIT_FAILURE, GET_PROFILE_SUCCESS, GET_PROFILE_REQUEST, GET_PROFILE_FAILURE, UPLOAD_IMAGE, CHANGE_VIEW_MODE, LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT, DELETE_PROFILE_REQUEST, DELETE_PROFILE_SUCCESS, DELETE_PROFILE_FAILURE, CLEAR_MESSAGE } from \"./userProfileActionTypes\";\nconst initialState = {\n  loading: false,\n  successMessage: \"\",\n  errorMessage: \"\",\n  updatedImageFile: null,\n  updatedImageFileURL: \"\",\n  user: {},\n  viewMode: \"view\",\n  token: \"\",\n  isLoggedIn: false\n};\n\nconst userProfileReducer = (state = initialState, action) => {\n  let {\n    type,\n    payload,\n    error\n  } = action;\n\n  switch (type) {\n    case LOGIN_REQUEST:\n    case EDIT_REQUEST:\n    case GET_PROFILE_REQUEST:\n    case DELETE_PROFILE_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case LOGIN_SUCCESS:\n      let {\n        user,\n        token\n      } = payload.data;\n      return { ...state,\n        loading: false,\n        user: user,\n        isLoggedIn: true,\n        token: token,\n        errorMessage: \"\"\n      };\n\n    case LOGIN_FAILURE:\n      let errorMessage = \"\";\n      console.log(typeof error.data);\n      if (error.data && typeof error.data === \"string\") errorMessage = error.data;else errorMessage = error.response.data.message;\n      console.log(errorMessage);\n      return { ...state,\n        loading: false,\n        user: {},\n        isLoggedIn: false,\n        errorMessage: errorMessage\n      };\n\n    case LOGOUT:\n      localStorage.clear();\n      return { ...state,\n        token: \"\",\n        user: {},\n        isLoggedIn: false\n      };\n\n    case DELETE_PROFILE_SUCCESS:\n      return { ...state,\n        token: \"\",\n        user: {},\n        isLoggedIn: false,\n        successMessage: payload.data.message\n      };\n\n    case CHANGE_VIEW_MODE:\n      return { ...state,\n        viewMode: action.payload,\n        updatedImageFile: null,\n        updatedImageFileURL: \"\"\n      };\n\n    case EDIT_SUCCESS:\n      return { ...state,\n        loading: false,\n        errorMessage: \"\",\n        updatedImageFile: null,\n        updatedImageFileURL: \"\",\n        viewMode: \"view\",\n        user: payload.data.user\n      };\n\n    case EDIT_FAILURE:\n      return { ...state,\n        loading: false,\n        successMessage: \"\",\n        errorMessage: error.response.data.message,\n        viewMode: \"edit\",\n        updatedImageFile: null,\n        updatedImageFileURL: \"\"\n      };\n\n    case GET_PROFILE_SUCCESS:\n      return { ...state,\n        loading: false,\n        successMessage: \"\",\n        errorMessage: \"\",\n        user: payload.data.user,\n        imageFilePath: payload.data.user.profilePicPath\n      };\n\n    case GET_PROFILE_FAILURE:\n      return { ...state,\n        loading: false,\n        successMessage: \"\",\n        user: {},\n        errorMessage: error.data\n      };\n\n    case UPLOAD_IMAGE:\n      let imageUrl = URL.createObjectURL(payload);\n      return { ...state,\n        updatedImageFile: payload,\n        updatedImageFileURL: imageUrl\n      };\n\n    case DELETE_PROFILE_FAILURE:\n      return { ...state,\n        loading: false,\n        errorMessage: error.response.data.message\n      };\n\n    case CLEAR_MESSAGE:\n      return { ...state,\n        successMessage: \"\",\n        errorMessage: \"\"\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default userProfileReducer;","map":{"version":3,"sources":["/Users/priyanka/Study/MERNProjects/social-media-app-mern/client/src/redux/userProfile/userProfileReducer.js"],"names":["EDIT_REQUEST","EDIT_SUCCESS","EDIT_FAILURE","GET_PROFILE_SUCCESS","GET_PROFILE_REQUEST","GET_PROFILE_FAILURE","UPLOAD_IMAGE","CHANGE_VIEW_MODE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","DELETE_PROFILE_REQUEST","DELETE_PROFILE_SUCCESS","DELETE_PROFILE_FAILURE","CLEAR_MESSAGE","initialState","loading","successMessage","errorMessage","updatedImageFile","updatedImageFileURL","user","viewMode","token","isLoggedIn","userProfileReducer","state","action","type","payload","error","data","console","log","response","message","localStorage","clear","imageFilePath","profilePicPath","imageUrl","URL","createObjectURL"],"mappings":"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","sourcesContent":["import {\n  EDIT_REQUEST,\n  EDIT_SUCCESS,\n  EDIT_FAILURE,\n  GET_PROFILE_SUCCESS,\n  GET_PROFILE_REQUEST,\n  GET_PROFILE_FAILURE,\n  UPLOAD_IMAGE,\n  CHANGE_VIEW_MODE,\n  LOGIN_REQUEST,\n  LOGIN_SUCCESS,\n  LOGIN_FAILURE,\n  LOGOUT,\n  DELETE_PROFILE_REQUEST,\n  DELETE_PROFILE_SUCCESS,\n  DELETE_PROFILE_FAILURE,\n  CLEAR_MESSAGE,\n} from \"./userProfileActionTypes\";\n\nconst initialState = {\n  loading: false,\n  successMessage: \"\",\n  errorMessage: \"\",\n  updatedImageFile: null,\n  updatedImageFileURL: \"\",\n  user: {},\n  viewMode: \"view\",\n  token: \"\",\n  isLoggedIn: false,\n};\n\nconst userProfileReducer = (state = initialState, action) => {\n  let { type, payload, error } = action;\n  switch (type) {\n    case LOGIN_REQUEST:\n    case EDIT_REQUEST:\n    case GET_PROFILE_REQUEST:\n    case DELETE_PROFILE_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGIN_SUCCESS:\n      let { user, token } = payload.data;\n      return {\n        ...state,\n        loading: false,\n        user: user,\n        isLoggedIn: true,\n        token: token,\n        errorMessage: \"\",\n      };\n    case LOGIN_FAILURE:\n      let errorMessage = \"\";\n      console.log(typeof error.data);\n      if (error.data && typeof error.data === \"string\")\n        errorMessage = error.data;\n      else errorMessage = error.response.data.message;\n      console.log(errorMessage);\n\n      return {\n        ...state,\n        loading: false,\n        user: {},\n        isLoggedIn: false,\n        errorMessage: errorMessage,\n      };\n    case LOGOUT:\n      localStorage.clear();\n      return {\n        ...state,\n        token: \"\",\n        user: {},\n        isLoggedIn: false,\n      };\n    case DELETE_PROFILE_SUCCESS:\n      return {\n        ...state,\n        token: \"\",\n        user: {},\n        isLoggedIn: false,\n        successMessage: payload.data.message,\n      };\n    case CHANGE_VIEW_MODE:\n      return {\n        ...state,\n        viewMode: action.payload,\n        updatedImageFile: null,\n        updatedImageFileURL: \"\",\n      };\n    case EDIT_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: \"\",\n        updatedImageFile: null,\n        updatedImageFileURL: \"\",\n        viewMode: \"view\",\n        user: payload.data.user,\n      };\n    case EDIT_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        successMessage: \"\",\n        errorMessage: error.response.data.message,\n        viewMode: \"edit\",\n        updatedImageFile: null,\n        updatedImageFileURL: \"\",\n      };\n\n    case GET_PROFILE_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        successMessage: \"\",\n        errorMessage: \"\",\n        user: payload.data.user,\n        imageFilePath: payload.data.user.profilePicPath,\n      };\n    case GET_PROFILE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        successMessage: \"\",\n        user: {},\n        errorMessage: error.data,\n      };\n    case UPLOAD_IMAGE:\n      let imageUrl = URL.createObjectURL(payload);\n      return {\n        ...state,\n        updatedImageFile: payload,\n        updatedImageFileURL: imageUrl,\n      };\n    case DELETE_PROFILE_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        errorMessage: error.response.data.message,\n      };\n    case CLEAR_MESSAGE:\n      return {\n        ...state,\n        successMessage: \"\",\n        errorMessage: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\nexport default userProfileReducer;\n"]},"metadata":{},"sourceType":"module"}